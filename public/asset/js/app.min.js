var ErrorLogger = function() {
    function n() {}
    return n.init = function() {
        var n = this;
        $.Deferred.exceptionHook = function(t) {
            t && !t.status && (t.stack !== n.prevErrStack && n.deferredErrorHandler(t), n.prevErrStack = t.stack)
        };
        $(document).ajaxError(function(n, t, i, r) {
            if (t.status !== 0) {
                var u = i.data ? i.data.substring ? i.data.substring(0, 1e3) : i.data.name : "EMPTY",
                    f = "AJAX " + t.status + " " + r + "\nRequest URL: " + i.method + " " + i.url + "\n\nRequest body: " + u + "\n\nResponse: " + t.responseText;
                window.logJsError(f)
            }
        })
    }, n.deferredErrorHandler = function(n) {
        var t = n.toString();
        t = n.message ? n.message : t;
        t += n.stack ? "\n" + n.stack : "";
        window.logJsError(t)
    }, n.debugLogAdd = function(n) {
        window.debugLog = window.debugLog || [];
        var t = new Date;
        window.debugLog.push(t.getHours() + ":" + t.getMinutes() + ":" + t.getSeconds() + "." + t.getMilliseconds() + " - " + n + ":")
    }, n
}(),
Eventable = function() {
    function n() {
        this.handlers = {}
    }
    return n.prototype.bind = function(n, t, i) {
        var r = this;
        i === void 0 && (i = null);
        $(this).on(n, t);
        this.handlers[n] = this.handlers[n] ? this.handlers[n] + 1 : 1;
        i && i.always(function() {
            return $(r).off(n, t)
        })
    }, n.prototype.one = function(n, t, i) {
        var r = this;
        i === void 0 && (i = null);
        $(this).one(n, t);
        this.handlers[n] = this.handlers[n] ? this.handlers[n] + 1 : 1;
        i && i.always(function() {
            return $(r).off(n, t)
        })
    }, n.prototype.unbind = function(n, t) {
        $(this).off(n, t);
        this.handlers[n] = this.handlers[n] ? this.handlers[n] - 1 : 0
    }, n.prototype.hasHandlers = function(n) {
        return this.handlers[n] && this.handlers[n] > 0
    }, n.prototype.trigger = function(n) {
        for (var r = this, i = [], t = 1; t < arguments.length; t++) i[t - 1] = arguments[t];
        n.split(" ").forEach(function(n) {
            return $(r).triggerHandler(n, i)
        })
    }, n
}(),
__extends = this && this.__extends || function() {
    var n = function(t, i) {
        return n = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function(n, t) {
            n.__proto__ = t
        } || function(n, t) {
            for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i])
        }, n(t, i)
    };
    return function(t, i) {
        function r() {
            this.constructor = t
        }
        n(t, i);
        t.prototype = i === null ? Object.create(i) : (r.prototype = i.prototype, new r)
    }
}(),
Dom = function(n) {
    function t() {
        return n !== null && n.apply(this, arguments) || this
    }
    return __extends(t, n), t.prototype.getLogJsErrorPath = function() {
        return $("body").data("log-js-error-path")
    }, t
}(Eventable),
UserDom = function(n) {
    function t(t) {
        var i = n.call(this) || this,
            r;
        return i.bodyDom = t, r = i.bodyDom.getBody(), i.elNagSignup = r.find(".nag-signup"), i.elNagWait = r.find(".nag-wait"), i
    }
    return __extends(t, n), t.prototype.updateUser = function(n) {
        n.authenticated && !n.active && this.showNagSignup("Service suspended, membership expired.")
    }, t.prototype.showNagSignup = function(n) {
        Prices.show(new PricesDom(this.bodyDom), this.bodyDom.getPaddleVendorId());
        $("html").css("overflow", "hidden");
        this.elNagSignup.removeClass("hidden").find(".message").text(n)
    }, t.prototype.toggleWait = function(n, t, i, r) {
        var e, u, f;
        this.elNagWait.hasClass("hidden") === n && (Prices.show(new PricesDom(this.bodyDom), this.bodyDom.getPaddleVendorId()), e = t + " Please wait # minutes to convert the file or Sign Up and convert immediately.", e = e.replace(/#/, '<time class="membership-wait-time" data-min="' + i + '">' + i + ":00<\/time>"), this.elNagWait.find(".message").html(e), this.elNagWait.find(".file-item").attr("title", r).find(".file-name").html(r), $("html").css("overflow", "hidden"), this.elNagWait.toggleClass("hidden", !n), u = $(".membership-wait-time"), f = u.prop("timer"), f && clearInterval(f), n && (f = setInterval(function() {
            var r = (u.prop("remain") || Number(u.data("min")) * 60) - 1,
                i, n, t;
            r > 0 ? (u.prop("remain", r), i = new Date(null), i.setSeconds(r), n = i.getMinutes().toString(), n.length < 2 && (n = "0" + n), t = i.getSeconds().toString(), t.length < 2 && (t = "0" + t), u.html(n + ":" + t)) : Utils.reloadPage()
        }, 1e3), u.prop("timer", f)))
    }, t.prototype.hideNags = function() {
        this.elNagSignup.addClass("hidden");
        this.elNagWait.addClass("hidden")
    }, t
}(Dom),
User = function() {
    function n() {}
    return n.init = function(n) {
        var t = this;
        this.dom = n;
        setInterval(function() {
            return t.refresh()
        }, 3e4);
        this.dom.bodyDom.bind("multiFileViolation", function() {
            return t.dom.showNagSignup("Only one file can be selected at a time. Multiple file conversion is supported only for members.")
        });
        this.dom.bodyDom.bind("userStatusChanged", function(n, i) {
            return t.dom.updateUser(i)
        });
        this.dom.bodyDom.bind("panelHide", function() {
            return t.dom.hideNags()
        });
        this.dom.bodyDom.bind("conversionDelay", function(n, i, r) {
            return t.dom.toggleWait(!0, "", i, r)
        });
        this.dataPro().done(function(t) {
            return n.updateUser(t)
        })
    }, n.dataPro = function(n) {
        return n === void 0 && (n = !1), n && this.refresh(), $.Deferred(function(n) {
            var t = window.userData;
            if (t) n.resolve(t);
            else $("#user-data").on("load", function() {
                return n.resolve(window.userData)
            })
        }).promise()
    }, n.refresh = function() {
        var n = this;
        $.getScript(this.dom.bodyDom.getAuthStatusPath() + "?v=" + this.statusReqVer++).done(function() {
            return n.dom.trigger("userStatusChanged", window.userData)
        })
    }, n.statusReqVer = Date.now(), n
}(),
Utils;
String.prototype.getFileExtension = function() {
return this.split(".").pop().toLowerCase()
};
String.prototype.isUrl = function() {
return this.toLowerCase().indexOf("http") === 0
};
String.prototype.isDataUrl = function() {
return this.toLowerCase().indexOf("data:") === 0
};
String.prototype.passwordStrength = function() {
var n = 0,
    i, t, r, u, f;
if (!this) return n;
for (i = {}, t = 0; t < this.length; t++) i[this[t]] = (i[this[t]] || 0) + 1, n += 5 / i[this[t]];
r = {
    digits: /\d/.test(this),
    lower: /[a-z]/.test(this),
    upper: /[A-Z]/.test(this),
    nonWords: /\W/.test(this)
};
u = 0;
for (f in r) u += r[f] == !0 ? 1 : 0;
return n += (u - 1) * 10, n = Math.min(n, 100), Math.round(n)
};
Utils = function() {
    function n() {}
    return n.toggleSlideEl = function(n) {
        n.hasClass("hidden") ? n.hide().removeClass("hidden").slideDown() : n.slideUp("fast", function() {
            return n.addClass("hidden")
        })
    }, n.showSlideEl = function(n) {
        n.hide().removeClass("hidden").slideDown()
    }, n.hideSlideEl = function(n) {
        n.slideUp("fast", function() {
            return n.addClass("hidden")
        })
    }, n.toggleFadeEl = function(n) {
        n.hasClass("hidden") ? n.hide().removeClass("hidden").fadeIn() : n.fadeOut("fast", function() {
            return n.addClass("hidden")
        })
    }, n.argsToArr = function() {
        return [].slice.call(arguments)
    }, n.flatten = function(n) {
        return [].concat.apply([], n)
    }, n.getMetas = function(n, t, i) {
        var r = i ? "&filter=" + i : "";
        return $.getJSON(n + "?srcFormat=" + t.join(",") + r)
    }, n.getMeta = function(n, t) {
        return $.getJSON(n + "?id=" + t)
    }, n.elIsInViewport = function(n) {
        var t = $(window).scrollTop(),
            r = t + $(window).height(),
            i = $(n).offset().top;
        return i <= r && i >= t
    }, n.getSrcFormats = function(t) {
        var i = [];
        return t && t.prepareRule && t.prepareRule.steps && t.prepareRule.steps.length > 0 && (i = t.prepareRule.steps[0].converters.map(function(n) {
            return n.sourceFormat.toLowerCase()
        }), i = n.flatten(i)), i
    }, n.getTransformConverter = function(n, t) {
        return t.filter(function(t) {
            return t.sourceFormat.toLowerCase() === n.toLowerCase()
        }).shift() || t.filter(function(n) {
            return !n.sourceFormat
        }).shift()
    }, n.setIndex = function(n, t, i) {
        i === void 0 && (i = null);
        n.idx = i && i.idx ? i.idx.slice(0) : [];
        n.idx.push(t)
    }, n.insertByIdx = function(t, i) {
        var u = t.map(function(t) {
                return n.compareIdx(t.idx, i.idx)
            }),
            r = u.indexOf(1);
        return r === -1 ? r = t.push(i) - 1 : t.splice(r, 0, i), r
    }, n.compareIdx = function(n, t) {
        var r, i = 0,
            e = n ? n.length : 0,
            o = t ? t.length : 0,
            u, f;
        do u = e > i ? n[i] : -1, f = o > i ? t[i] : -1, r = u === f ? 0 : u > f ? 1 : -1, i++; while (r === 0 && Math.max(e, o) > i);
        return r
    }, n.preloadImage = function(n) {
        return $.Deferred(function(t) {
            var i = new Image;
            i.onload = function() {
                return t.resolve(n)
            };
            i.onerror = function() {
                return t.reject()
            };
            i.src = n
        }).promise()
    }, n.insertElement = function(n, t, i) {
        t.prop("pos", i);
        var r = n.children().filter(function(n, t) {
            return $(t).prop("pos") >= i
        }).first();
        r.length === 0 && (r = n.children().filter(".fixed-item"));
        r.length > 0 ? t.insertBefore(r[0]) : n.append(t)
    }, n.showAsDialog = function(n) {
        return $.Deferred(function(t) {
            var i, r;
            n.removeClass("hidden");
            n.wrap("<div class='dialog-container'><\/div>");
            n.hasClass("dialog") || n.wrap("<div class='dialog'><\/div>");
            i = $("<div class='dialog-close img-close'><\/div>");
            n.prepend(i);
            $(".dialog-container, .dialog-container .dialog-close").on("click", function(n) {
                n.currentTarget === n.target && t.reject()
            });
            $("body").keyup(function(n) {
                n.keyCode === 27 && t.reject()
            });
            t.always(function() {
                i.remove();
                n.hasClass("dialog") || n.unwrap();
                n.unwrap();
                n.elHide()
            });
            r = n.attr("id") || Math.random().toString(36).substring(2);
            n.attr("id", r);
            n.data("history-back", function() {
                return t.reject()
            });
            window.history.replaceState({
                targetId: r
            }, "Dialog");
            window.history.pushState(null, "")
        })
    }, n.passDlgShow = function(t, i) {
        var r = $(".password-input-form"),
            f = r.find(".caption"),
            u = r.find(".password-input"),
            e = n.showAsDialog(r),
            o;
        r.on("submit", function() {
            return u[0].checkValidity() && e.resolve(u.val()), !1
        });
        return o = f.data(i ? "text-bad" : "text-req").replace(/{{fileName}}/g, t), f.text(o), u.val(i), u[0].focus(), e
    }, n.isMsFormat = function(n) {
        return jQuery.inArray(n.toLowerCase(), ["docx", "doc", "rtf", "xlsx", "xls", "pptx", "ppt"]) !== -1
    }, n.formatBytes = function(n) {
        return n < 1024 ? n + " Bytes" : n < 1048576 ? Math.round(n / 1024) + " KB" : n < 1073741824 ? (n / 1048576).toFixed(1) + " MB" : (n / 1073741824).toFixed(2) + " GB"
    }, n.parseRanges = function(n) {
        var t = n.replace(/[^0-9,\-,\,]/g, "").split(",").map(function(n) {
            var t = n.split("-"),
                i, r, u;
            if (t.length === 1) return parseInt(t[0]);
            if (t.length > 1 && (i = parseInt(t[0]), r = parseInt(t[1]), i !== NaN && r !== NaN)) {
                for (u = []; i <= r; i++) u.push(i);
                return u
            }
            return NaN
        });
        return t = [].concat.apply([], t).sort(function(n, t) {
            return n - t
        }), t.filter(function(n, i) {
            return n > 0 && (i === 0 || t[i - 1] !== n)
        })
    }, n.buildRanges = function(n) {
        return n.reduce(function(t, i, r) {
            return r === n.length - 1 && t.last === i - 1 ? (t.val += t.range > 1 ? "-" : t.val ? ", " : "", t.val += i.toString()) : t.last !== i - 1 && (t.val += t.range > 2 ? "-" + t.last : t.range > 1 ? ", " + t.last : "", t.val += t.val ? ", " : "", t.val += i.toString(), t.range = 0), t.last = i, t.range++, t
        }, {
            val: "",
            last: -1,
            range: 0
        }).val
    }, n.arrContains = function(n, t) {
        var i = n.map(function(n) {
                return n.toLocaleLowerCase()
            }),
            r = t.map(function(n) {
                return n.toLocaleLowerCase()
            });
        return r.every(function(n) {
            return i.indexOf(n) > -1
        })
    }, n.persist = function(n, t) {
        return $.ajax({
            method: "POST",
            url: t + "/upload?filename=files.json",
            data: JSON.stringify(n),
            contentType: "application/json"
        }).then(function(n) {
            return n.FileId
        })
    }, n.retrieve = function(n, t) {
        return $.get(t + "/d/" + n).then(function(n) {
            return n
        })
    }, n.reloadPage = function(n) {
        n === void 0 && (n = !0);
        n && (location.hash = "");
        location.reload()
    }, n
}(),
function(n) {
    "use strict";
    typeof define == "function" && define.amd ? define(n) : typeof module != "undefined" && typeof module.exports != "undefined" ? module.exports = n() : window.Sortable = n()
}(function() {
    "use strict";

    function c(n, t) {
        var f, u, i;
        if (!(n && n.nodeType && n.nodeType === 1)) throw "Sortable: `el` must be HTMLElement, and not " + {}.toString.call(n);
        this.el = n;
        this.options = t = ai({}, t);
        n[nt] = this;
        f = {
            group: null,
            sort: !0,
            disabled: !1,
            store: null,
            handle: null,
            scroll: !0,
            scrollSensitivity: 30,
            scrollSpeed: 10,
            draggable: /[uo]l/i.test(n.nodeName) ? "li" : ">*",
            ghostClass: "sortable-ghost",
            chosenClass: "sortable-chosen",
            dragClass: "sortable-drag",
            ignore: "a, img",
            filter: null,
            preventOnFilter: !0,
            animation: 0,
            setData: function(n, t) {
                n.setData("Text", t.textContent)
            },
            dropBubble: !1,
            dragoverBubble: !1,
            dataIdAttr: "data-id",
            delay: 0,
            touchStartThreshold: wt(window.devicePixelRatio, 10) || 1,
            forceFallback: !1,
            fallbackClass: "sortable-fallback",
            fallbackOnBody: !1,
            fallbackTolerance: 0,
            fallbackOffset: {
                x: 0,
                y: 0
            },
            supportPointer: c.supportPointer !== !1
        };
        for (u in f) u in t || (t[u] = f[u]);
        ei(t);
        for (i in this) i.charAt(0) === "_" && typeof this[i] == "function" && (this[i] = this[i].bind(this));
        this.nativeDraggable = t.forceFallback ? !1 : wi;
        r(n, "mousedown", this._onTapStart);
        r(n, "touchstart", this._onTapStart);
        t.supportPointer && r(n, "pointerdown", this._onTapStart);
        this.nativeDraggable && (r(n, "dragover", this), r(n, "dragenter", this));
        ut.push(this._onDragOver);
        t.store && this.sort(t.store.get(this))
    }

    function gt(i, r) {
        i.lastPullMode !== "clone" && (r = !0);
        o && o.state !== r && (u(o, "display", r ? "none" : ""), r || o.state && (i.options.group.revertClone ? (t.insertBefore(o, tt), i._animate(n, o)) : t.insertBefore(o, n)), o.state = r)
    }

    function k(n, t, i) {
        if (n) {
            i = i || f;
            do
                if (t === ">*" && n.parentNode === i || ci(n, t)) return n; while (n = di(n))
        }
        return null
    }

    function di(n) {
        var t = n.host;
        return t && t.nodeType ? t : n.parentNode
    }

    function gi(n) {
        n.dataTransfer && (n.dataTransfer.dropEffect = "move");
        n.preventDefault()
    }

    function r(n, t, i) {
        n.addEventListener(t, i, kt)
    }

    function e(n, t, i) {
        n.removeEventListener(t, i, kt)
    }

    function w(n, t, i) {
        if (n)
            if (n.classList) n.classList[i ? "add" : "remove"](t);
            else {
                var r = (" " + n.className + " ").replace(ti, " ").replace(" " + t + " ", " ");
                n.className = (r + (i ? " " + t : "")).replace(ti, " ")
            }
    }

    function u(n, t, i) {
        var r = n && n.style;
        if (r) {
            if (i === void 0) return f.defaultView && f.defaultView.getComputedStyle ? i = f.defaultView.getComputedStyle(n, "") : n.currentStyle && (i = n.currentStyle), t === void 0 ? i : i[t];
            t in r || (t = "-webkit-" + t);
            r[t] = i + (typeof i == "string" ? "" : "px")
        }
    }

    function oi(n, t, i) {
        if (n) {
            var u = n.getElementsByTagName(t),
                r = 0,
                f = u.length;
            if (i)
                for (; r < f; r++) i(u[r], r);
            return u
        }
        return []
    }

    function v(n, t, i, r, u, e, s, h, c) {
        n = n || t[nt];
        var l = f.createEvent("Event"),
            a = n.options,
            v = "on" + i.charAt(0).toUpperCase() + i.substr(1);
        l.initEvent(i, !0, !0);
        l.to = u || t;
        l.from = e || t;
        l.item = r || t;
        l.clone = o;
        l.oldIndex = s;
        l.newIndex = h;
        l.originalEvent = c;
        t.dispatchEvent(l);
        a[v] && a[v].call(n, l)
    }

    function si(n, t, i, r, u, e, o, s) {
        var h, c = n[nt],
            l = c.options.onMove,
            a;
        return h = f.createEvent("Event"), h.initEvent("move", !0, !0), h.to = t, h.from = n, h.dragged = i, h.draggedRect = r, h.related = u || t, h.relatedRect = e || t.getBoundingClientRect(), h.willInsertAfter = s, h.originalEvent = o, n.dispatchEvent(h), l && (a = l.call(c, h, o)), a
    }

    function hi(n) {
        n.draggable = !1
    }

    function nr() {
        dt = !1
    }

    function tr(n, t) {
        var r = n.lastElementChild,
            i = r.getBoundingClientRect();
        return t.clientY - (i.top + i.height) > 5 || t.clientX - (i.left + i.width) > 5
    }

    function ir(n) {
        for (var t = n.tagName + n.className + n.src + n.href + n.textContent, i = t.length, r = 0; i--;) r += t.charCodeAt(i);
        return r.toString(36)
    }

    function ht(n, t) {
        var i = 0;
        if (!n || !n.parentNode) return -1;
        while (n && (n = n.previousElementSibling)) n.nodeName.toUpperCase() !== "TEMPLATE" && (t === ">*" || ci(n, t)) && i++;
        return i
    }

    function ci(n, t) {
        if (n) try {
            if (n.matches) return n.matches(t);
            if (n.msMatchesSelector) return n.msMatchesSelector(t)
        } catch (i) {
            return !1
        }
        return !1
    }

    function li(n, t) {
        var i, r;
        return function() {
            i === void 0 && (i = arguments, r = this, rt(function() {
                i.length === 1 ? n.call(r, i[0]) : n.apply(r, i);
                i = void 0
            }, t))
        }
    }

    function ai(n, t) {
        if (n && t)
            for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]);
        return n
    }

    function vi(n) {
        return bt && bt.dom ? bt.dom(n).cloneNode(!0) : ii ? ii(n).clone(!0)[0] : n.cloneNode(!0)
    }

    function rr(n) {
        var t, i, r;
        for (st.length = 0, t = n.getElementsByTagName("input"), i = t.length; i--;) r = t[i], r.checked && st.push(r)
    }

    function ct(n) {
        return rt(n, 0)
    }

    function ni(n) {
        return clearTimeout(n)
    }
    if (typeof window == "undefined" || !window.document) return function() {
        throw new Error("Sortable.js requires a window with a document");
    };
    var n, s, i, o, t, tt, lt, a, at, vt, yt, ft, pt, y, h, it, et, b = {},
        d, l, ot, yi, ti = /\s+/g,
        pi = /left|right|inline/,
        nt = "Sortable" + (new Date).getTime(),
        p = window,
        f = p.document,
        wt = p.parseInt,
        rt = p.setTimeout,
        ii = p.jQuery || p.Zepto,
        bt = p.Polymer,
        kt = !1,
        ri = !1,
        wi = "draggable" in f.createElement("div"),
        ui = function(n) {
            return !navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie)/i) ? (n = f.createElement("x"), n.style.cssText = "pointer-events:auto", n.style.pointerEvents === "auto") : !1
        }(),
        dt = !1,
        g = Math.abs,
        fi = Math.min,
        st = [],
        ut = [],
        bi = function() {
            return !1
        },
        ki = li(function(n, t, i) {
            if (i && t.scroll) {
                var w = i[nt],
                    r, o, u = t.scrollSensitivity,
                    y = t.scrollSpeed,
                    s = n.clientX,
                    h = n.clientY,
                    k = window.innerWidth,
                    d = window.innerHeight,
                    f, e, c, v;
                if (at !== i && (a = t.scroll, at = i, vt = t.scrollFn, a === !0)) {
                    a = i;
                    do
                        if (a.offsetWidth < a.scrollWidth || a.offsetHeight < a.scrollHeight) break; while (a = a.parentNode)
                }
                a && (r = a, o = a.getBoundingClientRect(), f = (g(o.right - s) <= u) - (g(o.left - s) <= u), e = (g(o.bottom - h) <= u) - (g(o.top - h) <= u));
                f || e || (f = (k - s <= u) - (s <= u), e = (d - h <= u) - (h <= u), (f || e) && (r = p));
                (b.vx !== f || b.vy !== e || b.el !== r) && (b.el = r, b.vx = f, b.vy = e, clearInterval(b.pid), r && (b.pid = setInterval(function() {
                    (v = e ? e * y : 0, c = f ? f * y : 0, "function" != typeof vt || vt.call(w, c, v, n, l, r) === "continue") && (r === p ? p.scrollTo(p.pageXOffset + c, p.pageYOffset + v) : (r.scrollTop += v, r.scrollLeft += c))
                }, 24)))
            }
        }, 30),
        ei = function(n) {
            function r(n, t) {
                return (n == null || n === !0) && (n = i.name, n == null) ? bi : typeof n == "function" ? n : function(i, r) {
                    var u = r.options.group.name;
                    return t ? n : n && (n.join ? n.indexOf(u) > -1 : u == n)
                }
            }
            var i = {},
                t = n.group;
            t && typeof t == "object" || (t = {
                name: t
            });
            i.name = t.name;
            i.checkPull = r(t.pull, !0);
            i.checkPut = r(t.put);
            i.revertClone = t.revertClone;
            n.group = i
        };
    try {
        window.addEventListener("test", null, Object.defineProperty({}, "passive", {
            get: function() {
                ri = !1;
                kt = {
                    capture: !1,
                    passive: ri
                }
            }
        }))
    } catch (fr) {}
    return c.prototype = {
        constructor: c,
        _onTapStart: function(t) {
            var s = this,
                r = this.el,
                u = this.options,
                h = u.preventOnFilter,
                l = t.type,
                c = t.touches && t.touches[0],
                i = (c || t).target,
                e = t.target.shadowRoot && t.path && t.path[0] || i,
                f = u.filter,
                o;
            if ((rr(r), !n) && (!/mousedown|pointerdown/.test(l) || t.button === 0) && !u.disabled && !e.isContentEditable && (i = k(i, u.draggable, r), i) && lt !== i) {
                if (o = ht(i, u.draggable), typeof f == "function") {
                    if (f.call(this, t, i, this)) {
                        v(s, e, "filter", i, r, r, o);
                        h && t.preventDefault();
                        return
                    }
                } else if (f && (f = f.split(",").some(function(n) {
                        return n = k(e, n.trim(), r), n ? (v(s, n, "filter", i, r, r, o), !0) : void 0
                    }), f)) {
                    h && t.preventDefault();
                    return
                }(!u.handle || k(e, u.handle, r)) && this._prepareDragStart(t, c, i, o)
            }
        },
        _prepareDragStart: function(i, u, f, e) {
            var o = this,
                l = o.el,
                c = o.options,
                h = l.ownerDocument,
                a;
            f && !n && f.parentNode === l && (d = i, t = l, n = f, s = n.parentNode, tt = n.nextSibling, lt = f, it = c.group, y = e, this._lastX = (u || i).clientX, this._lastY = (u || i).clientY, n.style["will-change"] = "all", a = function() {
                o._disableDelayedDrag();
                n.draggable = o.nativeDraggable;
                w(n, c.chosenClass, !0);
                o._triggerDragStart(i, u);
                v(o, t, "choose", n, t, t, y)
            }, c.ignore.split(",").forEach(function(t) {
                oi(n, t.trim(), hi)
            }), r(h, "mouseup", o._onDrop), r(h, "touchend", o._onDrop), r(h, "touchcancel", o._onDrop), r(h, "selectstart", o), c.supportPointer && r(h, "pointercancel", o._onDrop), c.delay ? (r(h, "mouseup", o._disableDelayedDrag), r(h, "touchend", o._disableDelayedDrag), r(h, "touchcancel", o._disableDelayedDrag), r(h, "mousemove", o._disableDelayedDrag), r(h, "touchmove", o._delayedDragTouchMoveHandler), c.supportPointer && r(h, "pointermove", o._delayedDragTouchMoveHandler), o._dragStartTimer = rt(a, c.delay)) : a())
        },
        _delayedDragTouchMoveHandler: function(n) {
            fi(g(n.clientX - this._lastX), g(n.clientY - this._lastY)) >= this.options.touchStartThreshold && this._disableDelayedDrag()
        },
        _disableDelayedDrag: function() {
            var n = this.el.ownerDocument;
            clearTimeout(this._dragStartTimer);
            e(n, "mouseup", this._disableDelayedDrag);
            e(n, "touchend", this._disableDelayedDrag);
            e(n, "touchcancel", this._disableDelayedDrag);
            e(n, "mousemove", this._disableDelayedDrag);
            e(n, "touchmove", this._disableDelayedDrag);
            e(n, "pointermove", this._disableDelayedDrag)
        },
        _triggerDragStart: function(i, u) {
            u = u || (i.pointerType == "touch" ? i : null);
            u ? (d = {
                target: n,
                clientX: u.clientX,
                clientY: u.clientY
            }, this._onDragStart(d, "touch")) : this.nativeDraggable ? (r(n, "dragend", this), r(t, "dragstart", this._onDragStart)) : this._onDragStart(d, !0);
            try {
                f.selection ? ct(function() {
                    f.selection.empty()
                }) : window.getSelection().removeAllRanges()
            } catch (e) {}
        },
        _dragStarted: function() {
            if (t && n) {
                var i = this.options;
                w(n, i.ghostClass, !0);
                w(n, i.dragClass, !1);
                c.active = this;
                v(this, t, "start", n, t, t, y)
            } else this._nulling()
        },
        _emulateDragOver: function() {
            if (l) {
                if (this._lastX === l.clientX && this._lastY === l.clientY) return;
                this._lastX = l.clientX;
                this._lastY = l.clientY;
                ui || u(i, "display", "none");
                for (var n = f.elementFromPoint(l.clientX, l.clientY), t = n, r = ut.length; n && n.shadowRoot;) n = n.shadowRoot.elementFromPoint(l.clientX, l.clientY), t = n;
                if (t)
                    do {
                        if (t[nt]) {
                            while (r--) ut[r]({
                                clientX: l.clientX,
                                clientY: l.clientY,
                                target: n,
                                rootEl: t
                            });
                            break
                        }
                        n = t
                    } while (t = t.parentNode);
                ui || u(i, "display", "")
            }
        },
        _onTouchMove: function(n) {
            if (d) {
                var f = this.options,
                    e = f.fallbackTolerance,
                    o = f.fallbackOffset,
                    t = n.touches ? n.touches[0] : n,
                    s = t.clientX - d.clientX + o.x,
                    h = t.clientY - d.clientY + o.y,
                    r = n.touches ? "translate3d(" + s + "px," + h + "px,0)" : "translate(" + s + "px," + h + "px)";
                if (!c.active) {
                    if (e && fi(g(t.clientX - this._lastX), g(t.clientY - this._lastY)) < e) return;
                    this._dragStarted()
                }
                this._appendGhost();
                ot = !0;
                l = t;
                u(i, "webkitTransform", r);
                u(i, "mozTransform", r);
                u(i, "msTransform", r);
                u(i, "transform", r);
                n.preventDefault()
            }
        },
        _appendGhost: function() {
            if (!i) {
                var r = n.getBoundingClientRect(),
                    s = u(n),
                    e = this.options,
                    o;
                i = n.cloneNode(!0);
                w(i, e.ghostClass, !1);
                w(i, e.fallbackClass, !0);
                w(i, e.dragClass, !0);
                u(i, "top", r.top - wt(s.marginTop, 10));
                u(i, "left", r.left - wt(s.marginLeft, 10));
                u(i, "width", r.width);
                u(i, "height", r.height);
                u(i, "opacity", "0.8");
                u(i, "position", "fixed");
                u(i, "zIndex", "100000");
                u(i, "pointerEvents", "none");
                e.fallbackOnBody && f.body.appendChild(i) || t.appendChild(i);
                o = i.getBoundingClientRect();
                u(i, "width", r.width * 2 - o.width);
                u(i, "height", r.height * 2 - o.height)
            }
        },
        _onDragStart: function(i, e) {
            var s = this,
                c = i.dataTransfer,
                h = s.options;
            s._offUpEvents();
            it.checkPull(s, s, n, i) && (o = vi(n), o.draggable = !1, o.style["will-change"] = "", u(o, "display", "none"), w(o, s.options.chosenClass, !1), s._cloneId = ct(function() {
                t.insertBefore(o, n);
                v(s, t, "clone", n)
            }));
            w(n, h.dragClass, !0);
            e ? (e === "touch" ? (r(f, "touchmove", s._onTouchMove), r(f, "touchend", s._onDrop), r(f, "touchcancel", s._onDrop), h.supportPointer && (r(f, "pointermove", s._onTouchMove), r(f, "pointerup", s._onDrop))) : (r(f, "mousemove", s._onTouchMove), r(f, "mouseup", s._onDrop)), s._loopId = setInterval(s._emulateDragOver, 50)) : (c && (c.effectAllowed = "move", h.setData && h.setData.call(s, c, n)), r(f, "drop", s), s._dragStartId = ct(s._dragStarted))
        },
        _onDragOver: function(r) {
            var e = this.el,
                f, y, h, ut, a = this.options,
                st = a.group,
                l = c.active,
                w = it === st,
                ht = !1,
                ct = a.sort,
                d, g, p;
            if ((r.preventDefault !== void 0 && (r.preventDefault(), a.dragoverBubble || r.stopPropagation()), !n.animated) && (ot = !0, l && !a.disabled && (w ? ct || (ut = !t.contains(n)) : et === this || (l.lastPullMode = it.checkPull(this, l, n, r)) && st.checkPut(this, l, n, r)) && (r.rootEl === void 0 || r.rootEl === this.el))) {
                if (ki(r, a, this.el), dt) return;
                if (f = k(r.target, a.draggable, e), y = n.getBoundingClientRect(), et !== this && (et = this, ht = !0), ut) {
                    gt(l, !0);
                    s = t;
                    o || tt ? t.insertBefore(n, o || tt) : ct || t.appendChild(n);
                    return
                }
                if (e.children.length === 0 || e.children[0] === i || e === r.target && tr(e, r)) {
                    if (e.children.length !== 0 && e.children[0] !== i && e === r.target && (f = e.lastElementChild), f) {
                        if (f.animated) return;
                        h = f.getBoundingClientRect()
                    }
                    gt(l, w);
                    si(t, e, n, y, f, h, r) !== !1 && (n.contains(e) || (e.appendChild(n), s = e), this._animate(y, n), f && this._animate(h, f))
                } else if (f && !f.animated && f !== n && f.parentNode[nt] !== void 0) {
                    yt !== f && (yt = f, ft = u(f), pt = u(f.parentNode));
                    h = f.getBoundingClientRect();
                    var kt = h.right - h.left,
                        lt = h.bottom - h.top,
                        at = pi.test(ft.cssFloat + ft.display) || pt.display == "flex" && pt["flex-direction"].indexOf("row") === 0,
                        vt = f.offsetWidth > n.offsetWidth,
                        wt = f.offsetHeight > n.offsetHeight,
                        bt = (at ? (r.clientX - h.left) / kt : (r.clientY - h.top) / lt) > .5,
                        b = f.nextElementSibling,
                        v = !1;
                    at ? (d = n.offsetTop, g = f.offsetTop, v = d === g ? f.previousElementSibling === n && !vt || bt && vt : f.previousElementSibling === n || n.previousElementSibling === f ? (r.clientY - h.top) / lt > .5 : g > d) : ht || (v = b !== n && !wt || bt && wt);
                    p = si(t, e, n, y, f, h, r, v);
                    p !== !1 && ((p === 1 || p === -1) && (v = p === 1), dt = !0, rt(nr, 30), gt(l, w), n.contains(e) || (v && !b ? e.appendChild(n) : f.parentNode.insertBefore(n, v ? b : f)), s = n.parentNode, this._animate(y, n), this._animate(h, f))
                }
            }
        },
        _animate: function(n, t) {
            var i = this.options.animation,
                r;
            i && (r = t.getBoundingClientRect(), n.nodeType === 1 && (n = n.getBoundingClientRect()), u(t, "transition", "none"), u(t, "transform", "translate3d(" + (n.left - r.left) + "px," + (n.top - r.top) + "px,0)"), yi = t.offsetWidth, u(t, "transition", "all " + i + "ms"), u(t, "transform", "translate3d(0,0,0)"), clearTimeout(t.animated), t.animated = rt(function() {
                u(t, "transition", "");
                u(t, "transform", "");
                t.animated = !1
            }, i))
        },
        _offUpEvents: function() {
            var n = this.el.ownerDocument;
            e(f, "touchmove", this._onTouchMove);
            e(f, "pointermove", this._onTouchMove);
            e(n, "mouseup", this._onDrop);
            e(n, "touchend", this._onDrop);
            e(n, "pointerup", this._onDrop);
            e(n, "touchcancel", this._onDrop);
            e(n, "pointercancel", this._onDrop);
            e(n, "selectstart", this)
        },
        _onDrop: function(r) {
            var l = this.el,
                u = this.options;
            clearInterval(this._loopId);
            clearInterval(b.pid);
            clearTimeout(this._dragStartTimer);
            ni(this._cloneId);
            ni(this._dragStartId);
            e(f, "mouseover", this);
            e(f, "mousemove", this._onTouchMove);
            this.nativeDraggable && (e(f, "drop", this), e(l, "dragstart", this._onDragStart));
            this._offUpEvents();
            r && (ot && (r.preventDefault(), u.dropBubble || r.stopPropagation()), i && i.parentNode && i.parentNode.removeChild(i), (t === s || c.active.lastPullMode !== "clone") && o && o.parentNode && o.parentNode.removeChild(o), n && (this.nativeDraggable && e(n, "dragend", this), hi(n), n.style["will-change"] = "", w(n, this.options.ghostClass, !1), w(n, this.options.chosenClass, !1), v(this, t, "unchoose", n, s, t, y, null, r), t !== s ? (h = ht(n, u.draggable), h >= 0 && (v(null, s, "add", n, s, t, y, h, r), v(this, t, "remove", n, s, t, y, h, r), v(null, s, "sort", n, s, t, y, h, r), v(this, t, "sort", n, s, t, y, h, r))) : n.nextSibling !== tt && (h = ht(n, u.draggable), h >= 0 && (v(this, t, "update", n, s, t, y, h, r), v(this, t, "sort", n, s, t, y, h, r))), c.active && ((h == null || h === -1) && (h = y), v(this, t, "end", n, s, t, y, h, r), this.save())));
            this._nulling()
        },
        _nulling: function() {
            t = n = s = i = tt = o = lt = a = at = d = l = ot = h = yt = ft = et = it = c.active = null;
            st.forEach(function(n) {
                n.checked = !0
            });
            st.length = 0
        },
        handleEvent: function(t) {
            switch (t.type) {
                case "drop":
                case "dragend":
                    this._onDrop(t);
                    break;
                case "dragover":
                case "dragenter":
                    n && (this._onDragOver(t), gi(t));
                    break;
                case "mouseover":
                    this._onDrop(t);
                    break;
                case "selectstart":
                    t.preventDefault()
            }
        },
        toArray: function() {
            for (var i = [], n, r = this.el.children, t = 0, f = r.length, u = this.options; t < f; t++) n = r[t], k(n, u.draggable, this.el) && i.push(n.getAttribute(u.dataIdAttr) || ir(n));
            return i
        },
        sort: function(n) {
            var t = {},
                i = this.el;
            this.toArray().forEach(function(n, r) {
                var u = i.children[r];
                k(u, this.options.draggable, i) && (t[n] = u)
            }, this);
            n.forEach(function(n) {
                t[n] && (i.removeChild(t[n]), i.appendChild(t[n]))
            })
        },
        save: function() {
            var n = this.options.store;
            n && n.set(this)
        },
        closest: function(n, t) {
            return k(n, t || this.options.draggable, this.el)
        },
        option: function(n, t) {
            var i = this.options;
            if (t === void 0) return i[n];
            i[n] = t;
            n === "group" && ei(i)
        },
        destroy: function() {
            var n = this.el;
            n[nt] = null;
            e(n, "mousedown", this._onTapStart);
            e(n, "touchstart", this._onTapStart);
            e(n, "pointerdown", this._onTapStart);
            this.nativeDraggable && (e(n, "dragover", this), e(n, "dragenter", this));
            Array.prototype.forEach.call(n.querySelectorAll("[draggable]"), function(n) {
                n.removeAttribute("draggable")
            });
            ut.splice(ut.indexOf(this._onDragOver), 1);
            this._onDrop();
            this.el = n = null
        }
    }, r(f, "touchmove", function(n) {
        c.active && n.preventDefault()
    }), c.utils = {
        on: r,
        off: e,
        css: u,
        find: oi,
        is: function(n, t) {
            return !!k(n, t, n)
        },
        extend: ai,
        throttle: li,
        closest: k,
        toggleClass: w,
        clone: vi,
        index: ht,
        nextTick: ct,
        cancelNextTick: ni
    }, c.create = function(n, t) {
        return new c(n, t)
    }, c.version = "1.7.0", c
});
var DropboxIntegration = function() {
    function n() {}
    return n.registerEvents = function(n) {
        var t = this;
        n.bind("dropboxChooseShow", function() {
            Dropbox.choose({
                success: function(t) {
                    var i = t.map(function(n) {
                        return {
                            url: n.link,
                            fileName: n.name,
                            headerName: null,
                            headerValue: null
                        }
                    });
                    n.trigger("dropboxFilesSelected", i);
                    DataLayerPush.fileSelectRemote("Dropbox")
                },
                linkType: "direct",
                multiselect: t.multiselect
            })
        })
    }, n.loadLib = function() {
        return $.getScript("https://www.dropbox.com/static/api/2/dropins.js")
    }, n.multiselect = !0, n
}(),
Google = function() {
    function n() {}
    return n.loadLib = function() {
        return this.loadDef = this.loadDef || $.Deferred(function(n) {
            if (gapi && gapi.load) return n.resolve().promise();
            window.gapi_onload = function() {
                return n.resolve()
            }
        }).promise(), this.loadDef
    }, n.loadModule = function(n) {
        var t = this;
        return $.Deferred(function(i) {
            t.loadLib().done(function() {
                return gapi.load(n, {
                    callback: function() {
                        return i.resolve()
                    },
                    onerror: function() {
                        return i.reject("Error while loading Google " + n + " library")
                    },
                    timeout: 1e4,
                    ontimeout: function() {
                        return i.reject("Timeout while loading Google " + n + " library")
                    }
                })
            })
        }).promise()
    }, n
}(),
GooglePicker = function() {
    function n() {}
    return n.registerEvents = function(t, i, r, u) {
        t.bind("googlePickerShow", function() {
            n.getPicker(i, r, u).done(function(n) {
                var i = n.map(function(n) {
                    return {
                        url: n.link,
                        fileName: n.name,
                        headerName: n.headerName,
                        headerValue: n.headerValue
                    }
                });
                t.trigger("gdriveFilesSelected", i);
                DataLayerPush.fileSelectRemote("Gdrive")
            })
        })
    }, n.getPicker = function(n, t, i) {
        var r = this,
            f, u;
        return this.picker && this.picker.multiselect !== this.multiselect && (this.picker.dispose(), this.picker = null), f = this.picker ? $.Deferred().resolve(this.picker) : $.when(this.auth(t), Google.loadModule("picker")).then(function(t) {
            return r.buildPicker(i, t, n)
        }), u = $.Deferred(), f.done(function(n) {
            r.picker = n;
            n.setCallback(function(t) {
                return r.pickerCallback(t, n.oauthToken, u)
            });
            n.setVisible(!0)
        }), u.promise()
    }, n.pickerCallback = function(n, t, i) {
        if (n[google.picker.Response.ACTION] === google.picker.Action.PICKED) {
            var r = n[google.picker.Response.DOCUMENTS],
                u = r.map(function(n) {
                    return {
                        link: "https://www.googleapis.com/drive/v3/files/" + n.id + "?alt=media",
                        name: n.name,
                        headerName: "Authorization",
                        headerValue: "Bearer " + t
                    }
                });
            i.resolve(u)
        } else n[google.picker.Response.ACTION] === google.picker.Action.CANCEL && i.reject("No files selected")
    }, n.auth = function(n) {
        var t = $.Deferred();
        return gapi.auth.authorize({
            client_id: n,
            scope: ["https://www.googleapis.com/auth/drive.readonly"],
            immediate: !1
        }, function(n) {
            n && !n.error ? t.resolve(n.access_token) : t.reject("Authentication error")
        }), t.promise()
    }, n.buildPicker = function(n, t, i) {
        var r = (new google.picker.PickerBuilder).addView(google.picker.ViewId.DOCS).enableFeature(this.multiselect ? google.picker.Feature.MULTISELECT_ENABLED : null).setLocale(n).setOAuthToken(t).setDeveloperKey(i).build();
        return r.oauthToken = t, r.multiselect = this.multiselect, r
    }, n.multiselect = !0, n
}(),
BodyDom = function(n) {
    function t() {
        var t = n.call(this) || this;
        t.visibleToastCnt = 0;
        t.locale = $("html").attr("lang");
        t.elBody = $("body");
        t.caraDomainName = t.elBody.data("cara-domain-name");
        t.caraConvertPath = t.elBody.data("cara-convert-path");
        t.caraApiKey = t.elBody.data("cara-api-key");
        t.authStatusPath = t.elBody.data("auth-status-path");
        t.tokenConvertedPath = t.elBody.data("token-converted-path");
        t.tokenCreatePath = t.elBody.data("token-create-path");
        t.remoteFileInfoPath = t.elBody.data("remote-file-info-path");
        t.conversionInfoPath = t.elBody.data("conversion-info-path");
        t.canconvertInfoPath = t.elBody.data("canconvert-info-path");
        t.defaultConverterMeta = $("#default-converter").html();
        t.GoogleClientId = t.elBody.data("google-clientid");
        t.GoogleDeveloperKey = t.elBody.data("google-developerkey");
        t.DropboxAppKey = t.elBody.data("dropbox-app-key");
        t.paddleVendorId = t.elBody.data("paddle-vendorid");
        t.elContentContainer = t.elBody.find(".content-container");
        t.elErrorContainer = t.elBody.find(".error-container");
        t.elErrorMessage = t.elErrorContainer.find(".message");
        t.elPricesContainer = t.elBody.find(".prices-container");
        t.elTrialWaitMessage = t.elPricesContainer.find(".trial-wait-message");
        t.elSignupMessagePanel = t.elPricesContainer.find(".signup-message-panel");
        t.elBody.find(".language-button").on("click", function() {
            return Utils.showAsDialog($(".language-dialog"))
        });
        t.elBody.find(".sign-up").on("click", function() {
            return DataLayerPush.orders.signUpClick()
        });
        t.configureDropbox();
        t.initUi();
        t.bind("userStatusChanged", function(n, i) {
            return t.setAuth(i)
        });
        User.dataPro().done(function(n) {
            return t.setAuth(n)
        });
        $(".drop-btn").on("click", function(n) {
            n.stopPropagation();
            n.preventDefault()
        });
        $(".expandable .header").on("click", function(n) {
            return $(n.currentTarget).toggleClass("img-close").toggleClass("img-arrow-down-rose").siblings(".content").toggleClass("hidden")
        });
        $(".layout-header-nav").on("click", function(n) {
            n.target === n.currentTarget && ($(".user-menu").toggleClass("display-flex"), $(".main-menu").toggleClass("display-flex"))
        });
        $("body").on("click", function(n) {
            $(n.target).parents(".layout-header").length === 0 && ($(".user-menu").removeClass("display-flex"), $(".main-menu").removeClass("display-flex"))
        });
        return t
    }
    return __extends(t, n), t.prototype.getBody = function() {
        return this.elBody
    }, t.prototype.getCaraInfo = function() {
        return {
            domain: this.caraDomainName,
            convertPath: this.caraConvertPath,
            apiKey: this.caraApiKey
        }
    }, t.prototype.getCaraDomainName = function() {
        return this.caraDomainName
    }, t.prototype.getCaraConvertpath = function() {
        return this.caraConvertPath
    }, t.prototype.getGoogleClientId = function() {
        return this.GoogleClientId
    }, t.prototype.getGoogleDeveloperKey = function() {
        return this.GoogleDeveloperKey
    }, t.prototype.getAuthStatusPath = function() {
        return this.authStatusPath
    }, t.prototype.getTokenCreatePath = function() {
        return this.tokenCreatePath
    }, t.prototype.getTokenConvertedPath = function() {
        return this.tokenConvertedPath
    }, t.prototype.getCaraApiKey = function() {
        return this.caraApiKey
    }, t.prototype.getDropboxAppKey = function() {
        return this.DropboxAppKey
    }, t.prototype.getPaddleVendorId = function() {
        return this.paddleVendorId
    }, t.prototype.getLocale = function() {
        return this.locale
    }, t.prototype.hideAll = function() {
        this.elContentContainer.find("section").addClass("hidden")
    }, t.prototype.showError = function(n) {
        n === void 0 && (n = "");
        this.hideAll();
        this.elErrorMessage.text(this.elErrorMessage.data("message").replace("{{fileName}}", n));
        this.elErrorContainer.removeClass("hidden");
        DataLayerPush.fileSelectFail(n)
    }, t.prototype.getDefaultConverterMeta = function() {
        return this.defaultConverterMeta ? this.defaultConverterMeta.trim() : ""
    }, t.prototype.setAuth = function(n) {
        this.elBody.removeClass("auth-unknown authenticated unauthenticated").addClass(n.authenticated ? "authenticated" : "unauthenticated");
        $(".user-initial").text(n.initial);
        $(".user-name").text(n.name)
    }, t.prototype.isAuth = function() {
        return this.elBody.hasClass("authenticated")
    }, t.prototype.configureDropbox = function() {
        this.getBody().append('<script id="dropboxjs" data-app-key="' + this.getDropboxAppKey() + '"><\/script>')
    }, t.prototype.initUi = function() {
        $("[data-confirm]").on("submit", function(n) {
            return confirm($(n.currentTarget).data("confirm"))
        });
        $("[data-toggle]").on("click", function(n) {
            return Utils.toggleSlideEl($("#" + $(n.currentTarget).data("toggle")))
        });
        $.fn.elShow = function() {
            $(this).removeClass("hidden")
        };
        $.fn.elHide = function() {
            $(this).addClass("hidden")
        }
    }, t.prototype.getRemoteFileInfoPath = function() {
        return this.remoteFileInfoPath
    }, t.prototype.getConversionInfoPath = function() {
        return this.conversionInfoPath
    }, t.prototype.getCanconvertInfoPath = function() {
        return this.canconvertInfoPath
    }, t.prototype.showToast = function(n, t, i) {
        var u = this,
            r;
        t === void 0 && (t = "error");
        i === void 0 && (i = 1e4);
        r = jQuery('<div class="alert-container ' + t + ' toast">' + n + "<div/>").hide();
        this.elBody.append(r);
        this.visibleToastCnt > 0 && r.css("top", "+=" + 60 * this.visibleToastCnt);
        this.visibleToastCnt++;
        r.fadeIn("fast", function() {
            return setTimeout(function() {
                r.fadeOut("fast", function() {
                    return r.remove()
                });
                u.visibleToastCnt--
            }, i)
        })
    }, t.prototype.setMainHeader = function(n, t) {
        this.elBody.find(".main-header").text(n);
        this.elBody.find(".main-subheader").text(t)
    }, t.prototype.globalProgress = function(n) {
        var t = $(".global-progress"),
            i;
        t.css("opacity", "1");
        i = n === 0;
        i ? (t.css("width", "100%"), setTimeout(function() {
            t.css("opacity", "0");
            setTimeout(function() {
                t.css("width", "0")
            }, 1e3)
        }, 1e3)) : t.css("width", n + "%");
        $(".hide-while-uploading").toggleClass("hidden", !i);
        $(".show-while-uploading").toggleClass("hidden", i);
        $(".upload-progress-perc").text(Math.ceil(n))
    }, t.prototype.isAction = function(n) {
        return this.elBody.hasClass(n)
    }, t
}(Dom),
DragAndDropDom = function(n) {
    function t(t) {
        var i = n.call(this) || this;
        i.bodyDom = t;
        $(document).on("dragover", function(n) {
            n.preventDefault();
            n.stopPropagation()
        });
        $(document).on("dragleave", function(n) {
            n.preventDefault();
            n.stopPropagation()
        });
        $(document).on("drop", i.fileDrop.bind(i));
        return i
    }
    return __extends(t, n), t.prototype.isDraggingFiles = function(n) {
        var t = n.originalEvent.dataTransfer.types;
        return t.contains ? t.contains("Files") : n.originalEvent.dataTransfer.types.indexOf("Files") > -1
    }, t.prototype.fileDrop = function(n) {
        var t, i;
        this.isDraggingFiles(n) && (t = n.originalEvent, n.stopPropagation(), n.preventDefault(), i = t.dataTransfer.files, this.bodyDom.trigger("dragDropFilesSelected", i), DataLayerPush.fileSelectLocal("DragDrop"))
    }, t
}(Dom),
Fle = function() {
    function n(n, t, i) {
        i === void 0 && (i = null);
        var r = this;
        this.uploadedSize = 0;
        this.imgFormats = ["jpg", "jpeg", "png", "bmp", "gif", "svg", "ico", "webp", "tiff"];
        this.id = Math.random().toString(36).substring(2);
        this.fileIdDef = n;
        this.caraDomainName = t;
        this.cancelDef = i || $.Deferred();
        this.fileIdDef.progress(function(n, t) {
            return r.uploadedSize = t
        })
    }
    return n.prototype.getId = function() {
        return this.id
    }, n.prototype.getUrlPro = function() {
        var n = this;
        return this.getFileIdDef().then(function(t) {
            return n.caraDomainName + "/d/" + t
        }).promise()
    }, n.prototype.getFileIdDef = function() {
        return this.fileIdDef
    }, n.prototype.cancel = function(n) {
        this.cancelDef.reject(n);
        this.fileIdDef.reject(n)
    }, n.prototype.getCancelPro = function() {
        return this.cancelDef.promise()
    }, n.prototype.isCancelled = function() {
        return this.cancelDef.state() !== "pending"
    }, n.prototype.delete = function() {
        var n = this;
        return this.cancel("Deleting file"), this.getFormatPro().then(function(t) {
            return t === "web" ? null : n.getUrlPro().then(function(n) {
                return $.ajax({
                    method: "DELETE",
                    url: n
                })
            }).then(function() {}, function() {})
        })
    }, n.prototype.getFormatPro = function() {
        return this.getNamePro().then(function(n) {
            return n.getFileExtension().toLowerCase()
        })
    }, n.prototype.getUploadedSize = function() {
        return this.uploadedSize
    }, n.prototype.isImagePro = function() {
        var n = this;
        return this.getFormatPro().then(function(t) {
            return n.imgFormats.indexOf(t) > -1
        })
    }, n.getUploadProgressXhr = function(n) {
        var t = $.ajaxSettings.xhr();
        return t.upload.addEventListener("progress", function(t) {
            return n.notify(t.total, t.loaded)
        }), t
    }, n.uploadRequest = function(n, t, i) {
        var r = $.ajax(t);
        return r.done(function(t) {
            return ErrorLogger.debugLogAdd("Uploaded " + t.FileName + " -> " + t.FileId), n.resolve(t.FileId)
        }), r.fail(function() {
            return n.reject("Unable to upload file for conversion")
        }), i && i.fail(function() {
            return r.abort()
        }), r
    }, n.prototype.getThumbnailUrlPro = function() {
        var n = this;
        return this.getFormatPro().then(function(t) {
            return n.imgFormats.concat("pdf").indexOf(t) > -1 ? n.getFileIdDef().then(function(t) {
                return n.caraDomainName + "/t?id=" + t
            }) : $.Deferred().reject()
        })
    }, n
}(),
FleLocal = function(n) {
    function t(i, r) {
        var u = this,
            f = $.Deferred(),
            e = t.upload(i, f.promise(), r);
        return u = n.call(this, e, i, f) || this, u.file = r, u
    }
    return __extends(t, n), t.prototype.getSizePro = function() {
        return $.Deferred().resolve(this.file.size).promise()
    }, t.prototype.getNamePro = function() {
        return $.Deferred().resolve(this.file.name).promise()
    }, t.prototype.getDataUrlPro = function() {
        var t = $.Deferred(),
            n = new FileReader;
        return this.getCancelPro().fail(function() {
            return n.abort()
        }), n.onload = function() {
            return t.resolve(n.result)
        }, n.readAsDataURL(this.file), t.promise()
    }, t.upload = function(n, t, i) {
        var r = this;
        return $.Deferred(function(u) {
            var f = {
                xhr: function() {
                    return r.getUploadProgressXhr(u)
                },
                method: "POST",
                url: n + "/upload",
                data: i,
                contentType: !1,
                processData: !1,
                beforeSend: function(n) {
                    return n.setRequestHeader("Content-Disposition", "attachment; filename*=" + r.encode(i.name))
                }
            };
            DataLayerPush.fileUploadStart("local");
            ErrorLogger.debugLogAdd("Uploading local file: " + i.name);
            r.uploadRequest(u, f, t).done(function() {
                return DataLayerPush.fileUploadSuccess("local")
            }).fail(function() {
                return DataLayerPush.fileUploadFail("local")
            })
        })
    }, t.encode = function(n) {
        return "UTF-8''" + encodeURIComponent(n).replace(/['()]/g, function(n) {
            return "%" + n.charCodeAt(0).toString(16)
        }).replace(/\*/g, "%2A").replace(/%(7C|60|5E)/g, function(n, t) {
            return String.fromCharCode(parseInt(t, 16))
        })
    }, t.prototype.getThumbnailUrlPro = function() {
        var t = this;
        return this.isImagePro().then(function(i) {
            return i ? t.getDataUrlPro() : n.prototype.getThumbnailUrlPro.call(t)
        })
    }, t
}(Fle),
FleRemote = function(n) {
    function t(i, r, u, f, e, o) {
        f === void 0 && (f = null);
        e === void 0 && (e = null);
        o === void 0 && (o = null);
        var s = this,
            h = $.Deferred(),
            c = t.upload(i, h.promise(), r, u, f, e, o);
        return s = n.call(this, c, i, h) || this, s.remoteUrl = r, s.remoteFileInfoPath = u, f && (s.fileNamePro = $.Deferred().resolve(f).promise()), s.startFakeProgress(), s
    }
    return __extends(t, n), t.prototype.getNamePro = function() {
        return this.fileNamePro = this.fileNamePro || t.getRemoteFileNamePro(this.remoteUrl, this.remoteFileInfoPath), this.fileNamePro
    }, t.prototype.getSizePro = function() {
        return this.fileSizePro = this.fileSizePro || $.getJSON(this.remoteFileInfoPath + "?url=" + encodeURIComponent(this.remoteUrl)).then(function(n) {
            return n.length
        }, function() {
            return 1e6
        }), this.fileSizePro
    }, t.prototype.startFakeProgress = function() {
        var n = this,
            t = setInterval(function() {
                n.getFileIdDef() && n.getFileIdDef().state() === "pending" && n.getSizePro().done(function(t) {
                    var i = n.getUploadedSize() + 2e5;
                    i = i > t ? t : i;
                    n.getFileIdDef().notify(t, i)
                })
            }, 500);
        this.getFileIdDef().always(function() {
            clearInterval(t)
        })
    }, t.upload = function(n, i, r, u, f, e, o) {
        var h = this,
            s;
        return f === void 0 && (f = null), e === void 0 && (e = null), o === void 0 && (o = null), s = f ? $.Deferred().resolve(f) : t.getRemoteFileNamePro(r, u), ErrorLogger.debugLogAdd("Uploading remote file: " + u + " file name: " + f + " header: " + e + " " + o), $.Deferred(function(t) {
            s.done(function(u) {
                if (u.getFileExtension() === "web") t.resolve(r);
                else {
                    u = u ? "&fileName=" + encodeURIComponent(u) : "";
                    e = e ? "&headerName=" + encodeURIComponent(e) : "";
                    o = o ? "&headerValue=" + encodeURIComponent(o) : "";
                    var f = {
                        method: "POST",
                        url: n + "/upload?url=" + encodeURIComponent(r) + u + e + o
                    };
                    DataLayerPush.fileUploadStart("remote");
                    h.uploadRequest(t, f, i).done(function() {
                        return DataLayerPush.fileUploadSuccess("remote")
                    }).fail(function() {
                        return DataLayerPush.fileUploadFail("remote")
                    })
                }
            }).fail(function() {
                return t.reject()
            })
        })
    }, t.getRemoteFileNamePro = function(n, t) {
        return $.getJSON(t + "?url=" + encodeURIComponent(n)).then(function(n) {
            return n.extension === "html" ? "site.web" : !n.name && n.extension ? "file." + n.extension : n.name
        })
    }, t
}(Fle),
FleResult = function(n) {
    function t(t, i, r) {
        r === void 0 && (r = null);
        var u = this,
            f = $.Deferred(),
            e = $.Deferred().resolve(t.FileId);
        return u = n.call(this, e, i, f) || this, u.resultFile = t, u.srcFleSize = r, u
    }
    return __extends(t, n), t.prototype.getNamePro = function() {
        return $.Deferred().resolve(this.resultFile.FileName).promise()
    }, t.prototype.getSizePro = function() {
        return $.Deferred().resolve(this.resultFile.FileSize).promise()
    }, t.prototype.getSrcSize = function() {
        return this.srcFleSize
    }, t
}(Fle),
Context = function(n) {
    function t(t, i, r) {
        var u = n.call(this) || this;
        return u.tfles = [], u.userParams = {}, u.addingDef = $.Deferred(), u.jobCnt = 0, u.convCnt = 0, u.caraInfo = t, u.cancelDef = $.Deferred(), u.convMeta = i, u.rules = r, u
    }
    return __extends(t, n), t.prototype.getTfles = function() {
        return this.tfles
    }, t.prototype.getConvMeta = function() {
        return this.convMeta
    }, t.prototype.getFlesPros = function() {
        return this.tfles.map(function(n) {
            return n.getFlesPro()
        })
    }, t.prototype.getJobCnt = function() {
        return this.jobCnt
    }, t.prototype.getConvCnt = function() {
        return this.convCnt
    }, t.prototype.incConvCnt = function() {
        this.convCnt === 0 && this.trigger("convStart");
        this.convCnt++
    }, t.prototype.decConvCnt = function() {
        this.convCnt > 0 && (this.convCnt--, this.convCnt === 0 && this.trigger("convFinish"))
    }, t.prototype.getFlesPro = function() {
        return $.when.apply(null, this.getFlesPros()).then(Utils.argsToArr).then(Utils.flatten)
    }, t.prototype.getSuccessFlesPro = function() {
        var t = this,
            i = this.getFlesPros().length,
            n = [];
        return $.Deferred(function(r) {
            t.getFlesPros().forEach(function(t) {
                t.done(function(t) {
                    return n = n.concat(t)
                });
                t.always(function() {
                    --i <= 0 && (n.length > 0 ? r.resolve(n) : r.reject())
                })
            })
        })
    }, t.prototype.getAddingPro = function() {
        return this.addingDef.promise()
    }, t.prototype.getCancelPro = function() {
        return this.cancelDef.promise()
    }, t.prototype.cancel = function(n, t) {
        t === void 0 && (t = !0);
        this.cancelDef.reject(n);
        var i = t ? this.tfles.map(function(n) {
            return n.delete()
        }) : [];
        return $.when.apply(null, i)
    }, t.prototype.getUploadedSize = function() {
        var n = this.getFlesPro().then(function(n) {
            return n.map(function(n) {
                return n.getUploadedSize()
            })
        });
        return $.when.apply(null, n).then(Utils.argsToArr).then(function(n) {
            return n.reduce(function(n, t) {
                return n + t
            }, 0)
        })
    }, t.prototype.addFlesPro = function(n) {
        var u = this;
        if (n.state() === "rejected") n.fail(function(n) {
            return u.trigger("fileNotAccepted", n)
        });
        else {
            var f = this.convMeta ? this.convMeta.actions : null,
                i = new TransformFle(n, f, this.caraInfo),
                r = this.getTfles(),
                t = n.idx;
            t >= 0 && t < r.length ? this.tfles = r.slice(0, t).concat([i], r.slice(t)) : this.tfles.push(i);
            this.trigger("fileAdded", i, t);
            this.incConvCnt();
            n.always(function() {
                return u.decConvCnt()
            })
        }
    }, t.prototype.insertFles = function(n, t) {
        var u = this.convMeta ? this.convMeta.actions : null,
            i = new TransformFle(n, u, this.caraInfo),
            r = this.getTfles();
        this.tfles = r.slice(0, t).concat([i], r.slice(t));
        this.trigger("fileAdded", i, t)
    }, t.prototype.insertFlesSeparated = function(n, t) {
        var i = this;
        n.forEach(function(n, r) {
            var u = $.Deferred().resolve([n]).promise();
            i.insertFles(u, t + r)
        })
    }, t.prototype.prepAndAddFles = function(n) {
        var t = this,
            i;
        return this.rules ? (this.jobCnt++, this.incConvCnt(), i = Transform.do(n, this.rules, this.cancelDef, this.caraInfo, this.addFlesPro.bind(this), this.userParams).always(function() {
            t.decConvCnt();
            t.jobCnt--
        }), this.addingDef.notify(i)) : n.forEach(function(n) {
            return t.addFlesPro(n)
        }), this
    }, t.prototype.addLocalFiles = function(n) {
        for (var r, u, i = [], t = 0; t < n.length; t++) this.canConvert(n[t].name.getFileExtension()) ? (r = new FleLocal(this.caraInfo.domain, n[t]), this.registerUploadEvets(r), i.push(r)) : this.trigger("fileNotAccepted", n[t].name);
        return i.length > 0 && (u = $.Deferred().resolve(i).promise(), this.prepAndAddFles([u])), this
    }, t.prototype.addRemoteFile = function(n, t) {
        var i = this;
        n.forEach(function(n) {
            var r = n.fileName ? $.Deferred().resolve(n.fileName).promise() : FleRemote.getRemoteFileNamePro(n.url, t);
            r.done(function(r) {
                var u, f;
                i.canConvert(r.getFileExtension()) ? (u = new FleRemote(i.caraInfo.domain, n.url, t, r, n.headerName, n.headerValue), i.registerUploadEvets(u), f = $.Deferred().resolve([u]).promise(), i.prepAndAddFles([f])) : i.trigger("fileNotAccepted", r)
            }).fail(function() {
                return i.trigger("unableAccessRemoteFile", n.url)
            })
        })
    }, t.prototype.addStateFiles = function(n) {
        var t = this;
        n.map(function(n) {
            return new FleResult(n, t.caraInfo.domain)
        }).forEach(function(n) {
            var i = $.Deferred().resolve([n]);
            t.addFlesPro(i)
        });
        this.firstJobPro = $.Deferred().resolve().promise()
    }, t.prototype.getFirstJobPro = function() {
        var n = this;
        return this.firstJobPro = this.firstJobPro || $.Deferred(function(t) {
            n.getAddingPro().progress(function(n) {
                n.done(function() {
                    return t.resolve()
                })
            })
        }).promise(), this.firstJobPro
    }, t.prototype.removeFile = function(n) {
        n.delete();
        this.tfles = $.grep(this.tfles, function(t) {
            return t !== n
        });
        $(this).triggerHandler("fileRemoved", n)
    }, t.prototype.deleteAll = function() {
        var n = this.tfles.map(function(n) {
                return n.delete()
            }),
            t;
        return this.downloadPro && (t = this.downloadPro.then(function(n) {
            return n.delete()
        }), n.push(t)), $.when.apply(null, n)
    }, t.prototype.filterFiles = function(n) {
        var i = this,
            t;
        n && (t = Utils.parseRanges(n), this.tfles.filter(function(n, i) {
            return t.indexOf(i + 1) === -1
        }).forEach(function(n) {
            return i.removeFile(n)
        }))
    }, t.prototype.cancelThumbnails = function() {
        this.tfles.forEach(function(n) {
            return n.cancelThumbnail()
        })
    }, t.prototype.getTfleById = function(n) {
        return this.tfles.filter(function(t) {
            return t.getId() === n
        }).shift()
    }, t.prototype.getFleCount = function() {
        var n = this;
        return this.getFirstJobPro().then(function() {
            return n.getSuccessFlesPro().then(function(n) {
                return n.length
            })
        })
    }, t.prototype.getFirstFle = function() {
        var n = this;
        return this.getFirstJobPro().then(function() {
            return n.getSuccessFlesPro().then(function(n) {
                return n.length > 0 ? n[0] : $.Deferred().reject("No files converted").promise()
            })
        })
    }, t.prototype.reorder = function(n) {
        var t = this;
        this.tfles = n.map(function(n) {
            return t.getTfleById(n)
        })
    }, t.prototype.canConvert = function(n) {
        return !this.rules || this.rules.steps[0] && this.rules.steps[0].converters && this.rules.steps[0].converters.some(function(t) {
            return !t.sourceFormat || t.sourceFormat.toLowerCase() === n.toLowerCase()
        })
    }, t.prototype.getFormatsPro = function() {
        var n = this;
        return $.Deferred(function(t) {
            var i = n.tfles.map(function(n) {
                return n.getFlesPro()
            });
            $.when.apply(null, i).then(Utils.argsToArr).then(Utils.flatten).then(function(n) {
                var i = n.map(function(n) {
                    return n.getFormatPro()
                });
                $.when.apply(null, i).then(Utils.argsToArr).then(Utils.flatten).then(function(n) {
                    return t.resolve(n).promise()
                })
            })
        })
    }, t.prototype.registerUploadEvets = function(n) {
        var t = this;
        $.when(n.getSizePro(), n.getUploadedSize()).done(function(i, r) {
            i > r && (n.getFileIdDef().progress(function(i, r) {
                return t.trigger("uploadProgress", n.getId(), i, r)
            }), n.getFileIdDef().always(function() {
                return t.trigger("uploadProgress", n.getId(), 0, 0)
            }))
        })
    }, t.prototype.splitTfle = function(n) {
        var t = this,
            i = this.getTfleById(n),
            r = i.split();
        return r.then(function(n) {
            return t.cancelDef.state() === "pending" ? (t.insertFlesSeparated(n, t.getTfles().indexOf(i)), t.removeFile(i), n) : $.Deferred().reject()
        })
    }, t
}(Eventable),
TransformFle = function() {
    function n(n, t, i) {
        this.rotated = 0;
        this.pendingRotations = 0;
        this.thumbnailCancelDef = $.Deferred();
        this.actionCancelDef = $.Deferred();
        this.selected = !1;
        this.id = Math.random().toString(36).substring(2);
        this.initialFlesPro = n;
        this.flesPro = this.initialFlesPro;
        this.actions = t;
        this.caraInfo = i
    }
    return n.prototype.getId = function() {
        return this.id
    }, n.prototype.getFlesPro = function() {
        return this.requestRotation(), this.flesPro
    }, n.prototype.rotate = function() {
        var n = this;
        this.pendingRotations++;
        clearTimeout(this.rotationTimeout);
        this.rotationTimeout = setTimeout(function() {
            return n.requestRotation()
        }, 3e3)
    }, n.prototype.requestRotation = function() {
        if (this.pendingRotations > 0) {
            clearTimeout(this.rotationTimeout);
            var t = n.getRotationsToAngle(this.pendingRotations).toString();
            t !== "0" && (this.flesPro = n.doAction(this.flesPro, this.actionCancelDef, this.caraInfo, this.actions.rotate, [t]));
            this.rotated += this.pendingRotations;
            this.pendingRotations = 0
        }
    }, n.prototype.getRotationAngle = function() {
        return n.getRotationsToAngle(this.rotated + this.pendingRotations)
    }, n.getRotationsToAngle = function(n) {
        return n % 4 * 90
    }, n.prototype.getThumbnailUrlPro = function() {
        return this.flesPro.then(function(n) {
            return n[0].getThumbnailUrlPro()
        })
    }, n.prototype.cancelThumbnail = function() {
        this.thumbnailCancelDef.reject("Canceled")
    }, n.prototype.deleteThumbnail = function() {
        return this.cancelThumbnail(), this.thumbnailPro ? this.thumbnailPro.then(function(n) {
            return n.forEach(function(n) {
                return n.delete()
            })
        }, function() {}) : $.Deferred().resolve()
    }, n.prototype.delete = function() {
        var n = this.flesPro.then(function(n) {
            return n.forEach(function(n) {
                return n.delete()
            })
        });
        return $.when(n, this.deleteThumbnail())
    }, n.prototype.split = function() {
        var t = this;
        return n.doAction(this.getFlesPro(), this.actionCancelDef, this.caraInfo, this.actions.split).always(function() {
            return t.delete()
        })
    }, n.getAction = function(n, t) {
        var i = t.map(function(n) {
                return n.converter
            }),
            r = Utils.getTransformConverter(n, i);
        return t.filter(function(n) {
            return n.converter === r
        }).shift()
    }, n.doAction = function(n, t, i, r, u, f) {
        var e = this;
        return u === void 0 && (u = []), f === void 0 && (f = !1), n.then(function(n) {
            var o = n.map(function(o) {
                return o.getFormatPro().then(function(o) {
                    var s = e.getAction(o, r);
                    if (s) {
                        var h = s.converter,
                            c = h.parameters || {},
                            l = u.reduce(function(n, t, i) {
                                return n[s.inputParams[i]] = t, n
                            }, c);
                        return Cara.convert(n, !1, t, h.destinationFormat, i, l, f)
                    }
                    return $.Deferred().reject().promise()
                })
            });
            return $.when.apply(null, o).then(Utils.flatten)
        })
    }, n
}(),
ContextEvents = function() {
    function n() {}
    return n.bind = function(n, t, i) {
        var r = t.getCancelPro(),
            u;
        n.bind("localFilesSelected", function(r, u) {
            i || u.length === 1 ? t.addLocalFiles(u) : n.trigger("multiFileViolation")
        }, r);
        n.bind("remoteFilesSelected", function(r, u) {
            i || u.length === 1 ? t.addRemoteFile(u, n.getRemoteFileInfoPath()) : n.trigger("multiFileViolation")
        }, r);
        t.bind("fileNotAccepted", function(t, i) {
            n.showToast("Unable to add " + i + " file")
        }, r);
        t.bind("unableAccessRemoteFile", function(t, i) {
            n.showToast("Unable to access remote file: " + i + "")
        }, r);
        t.bind("uploadProgress", function(t, i, r, u) {
            UploadProgress.event(n, i, r, u)
        });
        u = function() {
            return $(window).on("beforeunload", function(n) {
                return n.preventDefault(), ""
            })
        };
        t.bind("convStart", u);
        t.bind("convFinish", function() {
            return $(window).off("beforeunload")
        });
        t.getConvCnt() > 0 && u()
    }, n
}(),
UploadProgress = function() {
    function n() {}
    return n.event = function(n, t, i, r) {
        var u, f, e, o;
        i > r ? this.state[t] = {
            total: i,
            loaded: r
        } : this.state[t] && delete this.state[t];
        u = 0;
        f = 0;
        for (e in this.state) u += this.state[e].total, f += this.state[e].loaded;
        o = u > 0 ? Math.round(f / u * 1e3) / 10 : 0;
        n.globalProgress(o)
    }, n.state = {}, n
}(),
FileInputDom = function(n) {
    function t(t) {
        var i = n.call(this) || this,
            r;
        return i.bodyDom = t, r = i.bodyDom.getBody(), i.elFileInputContainer = r.find(".file-input-container"), i.elDropDownBtn = i.elFileInputContainer.find(".upload-drop-btn"), i.elGooglePickerBtn = r.find(".google-picker-btn"), i.elDropboxChooseBtn = r.find(".dropbox-choose-btn"), i.elUrlInputForm = i.bodyDom.getBody().find(".url-input-form"), i.elUrlInput = i.bodyDom.getBody().find(".url-input"), i.elUploadSrcThumbnails = r.find(".upload-src-thumbnails"), i.elUploadSrc = r.find(".upload-src"), i.elUrlInputBtn = r.find(".url-input-btn"), i.elFileInput = r.find(".file-upload-input"), i.bindEvents(), i
    }
    return __extends(t, n), t.prototype.bindEvents = function() {
        var n = this;
        this.elDropDownBtn.on("click mouseover", function() {
            return n.trigger("wantSrcIntegrations")
        });
        this.elFileInput.on("change", this.onFileInputChange.bind(this));
        this.elGooglePickerBtn.on("click", function() {
            return n.trigger("googlePickerChooseBtnClick"), !1
        });
        this.elDropboxChooseBtn.on("click", function() {
            return n.trigger("dropboxChooseBtnClick"), !1
        });
        this.elUrlInputBtn.on("click", function() {
            var t = Utils.showAsDialog(n.elUrlInputForm);
            n.elUrlInputForm.on("submit", function() {
                return n.elUrlInput[0].checkValidity() && t.resolve(n.elUrlInput.val()), !1
            });
            t.done(function(t) {
                return n.bodyDom.trigger("urlFileSelected", t)
            })
        })
    }, t.prototype.onFileInputChange = function(n) {
        var t = $(n.currentTarget).prop("files");
        t.length > 0 && (this.bodyDom.trigger("inputFilesSelected", t), DataLayerPush.fileSelectLocal("Button"), this.clearFileInput())
    }, t.prototype.clearFileInput = function() {
        this.elFileInput.val(null)
    }, t.prototype.multiselect = function(n) {
        n ? this.elFileInput.attr("multiple", "") : this.elFileInput.removeAttr("multiple")
    }, t.prototype.srcFormats = function(n) {
        n ? this.elFileInput.attr("accept", n.map(function(n) {
            return "." + n
        }).join(", ")) : this.elFileInput.removeAttr("accept")
    }, t.prototype.hide = function() {
        this.elFileInputContainer.addClass("hidden")
    }, t.prototype.toggleUploadSrc = function() {
        this.elUploadSrcThumbnails.addClass("hidden");
        Utils.toggleFadeEl(this.elUploadSrc)
    }, t.prototype.enableGoogleDrive = function() {
        this.elGooglePickerBtn.removeClass("disabled")
    }, t.prototype.enableDropbox = function() {
        this.elDropboxChooseBtn.removeClass("disabled")
    }, t
}(Dom),
FileInput = function() {
    function n() {}
    return n.show = function(n) {
        var t = this;
        n.one("wantSrcIntegrations", function() {
            return t.loadSrcIntegrations(n)
        });
        n.bind("googlePickerChooseBtnClick", function() {
            return n.bodyDom.trigger("googlePickerShow")
        });
        n.bind("dropboxChooseBtnClick", function() {
            return n.bodyDom.trigger("dropboxChooseShow")
        });
        n.bodyDom.bind("fileInputSetSrcFormats", function(t, i) {
            return n.srcFormats(i)
        });
        n.bodyDom.bind("fileInputSetMultiselect", function(t, i) {
            return n.multiselect(i)
        });
        n.bodyDom.bind("inputFilesSelected dragDropFilesSelected", function(i, r) {
            return t.localFilesSelected(n, r)
        });
        n.bodyDom.bind("gdriveFilesSelected dropboxFilesSelected", function(i, r) {
            return t.remoteFilesSelected(n, r)
        });
        n.bodyDom.bind("urlFileSelected", function(i, r) {
            return t.remoteFilesSelected(n, [{
                url: r
            }])
        });
        n.bind("restartBtnClick", function() {
            return Utils.reloadPage()
        })
    }, n.localFilesSelected = function(n, t) {
        User.dataPro().done(function(i) {
            i.conversionDelay === 0 ? n.bodyDom.trigger("localFilesSelected", t) : n.bodyDom.trigger("conversionDelay", i.conversionDelay, t[0].name)
        })
    }, n.remoteFilesSelected = function(n, t) {
        User.dataPro().done(function(i) {
            i.conversionDelay === 0 ? n.bodyDom.trigger("remoteFilesSelected", t) : n.bodyDom.trigger("conversionDelay", i.conversionDelay, t[0].fileName)
        })
    }, n.loadSrcIntegrations = function(n) {
        Google.loadModule("auth").done(function() {
            return n.enableGoogleDrive()
        });
        DropboxIntegration.loadLib().done(function() {
            return n.enableDropbox()
        })
    }, n
}(),
StartDom = function(n) {
    function t(t) {
        var i = n.call(this) || this,
            r;
        return i.bodyDom = t, r = i.bodyDom.getBody(), i.elStartContainer = r.find(".start-panel"), i
    }
    return __extends(t, n), t.prototype.show = function() {
        this.elStartContainer.removeClass("hidden")
    }, t.prototype.hide = function() {
        this.elStartContainer.addClass("hidden")
    }, t
}(Dom),
Start = function() {
    function n() {}
    return n.show = function(n, t, i) {
        return $.Deferred(function(r) {
            t.bind("fileAdded", function() {
                return r.resolve(t)
            }, r.promise());
            n.bodyDom.trigger("fileInputSetSrcFormats", Utils.getSrcFormats(i));
            n.bodyDom.trigger("fileInputSetMultiselect", !0)
        }).then(function(t) {
            return n.hide(), n.bodyDom.trigger("panelHide startPanelHide"), t
        }).promise()
    }, n
}(),
Token = function() {
    function n() {}
    return n.createFn = function(n) {
        return function() {
            return $.Deferred().resolve(n).promise()
        }
    }, n
}(),
Cara = function() {
    function n() {}
    return n.convert = function(n, t, i, r, u, f, e) {
        var o = this;
        return f === void 0 && (f = null), e === void 0 && (e = !1), f = jQuery.extend({}, f), $.when(n[0].getFormatPro(), u.tokenProFn()).then(function(s, h) {
            return DataLayerPush.conversionStart(s, r), o.request(n, t, i, u.domain, u.convertPath, s, r, u.apiKey, h, null, f, e).then(null, function(c, l) {
                if (i.state() === "pending" && l.status >= 500) {
                    if (s === "pdf") return DataLayerPush.conversionFixPdf(s, r), o.request(n, t, i, u.domain, u.convertPath, s, "pdf", u.apiKey, h, null, f, e).then(function(n) {
                        return o.request(n, t, i, u.domain, u.convertPath, s, r, u.apiKey, h, null, f, e)
                    }, function(s, h) {
                        return h.responseJSON && h.responseJSON.Code === 5003 ? o.pass(s, n, t, i, r, u, f, e) : $.Deferred().reject(s, h).promise()
                    });
                    if (l.responseJSON && l.responseJSON.Code === 5003) return o.pass(c, n, t, i, r, u, f, e);
                    if (Utils.isMsFormat(s)) return DataLayerPush.conversionFixOo(s, r), o.request(n, t, i, u.domain, u.convertPath, s, r, u.apiKey, h, "OpenOfficeToPdf", f, e)
                }
                return $.Deferred().reject(c).promise()
            })
        })
    }, n.pass = function(n, t, i, r, u, f, e, o) {
        var s = this;
        return e === void 0 && (e = null), o === void 0 && (o = !1), Utils.passDlgShow(n, e.DocumentPassword).then(function(n) {
            return e.DocumentPassword = n, s.convert(t, i, r, u, f, e, o)
        }, function() {
            return $.Deferred().reject(n).promise()
        })
    }, n.request = function(t, i, r, u, f, e, o, s, h, c, l, a) {
        var v = this;
        return c === void 0 && (c = null), User.dataPro().then(function(y) {
            var p, w;
            return y.stamp && (l = l || {}, l.stamp = "true"), p = function() {
                return n.createRequestDto(t, i, r, e).then(function(n) {
                    var t = $.ajax({
                        method: "POST",
                        url: "" + u + f + e + "/to/" + o + (c ? "/converter/" + c : "") + "?ApiKey=" + s + "&Token=" + h + "&StoreFile=true" + (l ? "&" + $.param(l) : ""),
                        data: JSON.stringify(n),
                        contentType: "application/json"
                    });
                    return r.fail(function(n) {
                        return t.abort(n)
                    }), t
                }).then(function(n) {
                    return t[0].getSizePro().then(function(t) {
                        return n.Files.map(function(n) {
                            return new FleResult(n, u, t)
                        })
                    })
                }, function(n) {
                    var i = v;
                    return DataLayerPush.conversionFail(e, o), $.Deferred(function(r) {
                        t[0].getNamePro().done(function(t) {
                            return r.reject(t, n, i)
                        })
                    })
                })
            }, v.thumbnailQueues = v.thumbnailQueues || [$.when(), $.when(), $.when(), $.when()], v.conversionQueues = v.conversionQueues || [$.when(), $.when(), $.when(), $.when()], w = a ? v.thumbnailQueues : v.conversionQueues, n.enqueueJob(p, r, w).promise()
        })
    }, n.createRequestDto = function(n, t, i, r) {
        return $.when.apply(null, n.map(function(n) {
            return n.getFileIdDef()
        })).then(Utils.argsToArr).then(function(n) {
            var u, f;
            return i.state() !== "pending" ? $.Deferred().reject("Canceled") : (r === "web" ? u = [{
                Name: "Url",
                Value: n[0]
            }, {
                Name: "ConversionDelay",
                Value: 5
            }, {
                Name: "LoadLazyContent",
                Value: "true"
            }, {
                Name: "ViewportWidth",
                Value: 1280
            }] : (f = n.map(function(n) {
                return {
                    Name: null,
                    Data: null,
                    Id: n
                }
            }), u = [{
                Name: t ? "Files" : "File",
                FileValues: t ? f : null,
                FileValue: t ? null : f[0],
                Value: null
            }]), {
                Parameters: u
            })
        })
    }, n.enqueueJob = function(n, t, i) {
        return $.Deferred(function(r) {
            var u = i.filter(function(n) {
                    return n.state() !== "pending"
                }).shift(),
                f = u ? i.indexOf(u) : 0,
                e = i.splice(f, 1)[0];
            e.always(function() {
                t.state() === "pending" ? n().done(function() {
                    r.resolve.apply(null, arguments)
                }).fail(function() {
                    r.reject.apply(null, arguments)
                }) : r.reject("Canceled")
            });
            i.push(r.promise())
        }).promise()
    }, n
}(),
Transform = function() {
    function n() {}
    return n.do = function(t, i, r, u, f, e) {
        var o = this;
        return $.Deferred(function(s) {
            var c = $.Deferred(),
                h = c.promise(),
                l;
            i && i.steps.filter(function(n) {
                return n.conditions.indexOf("default") >= 0 || n.conditions.indexOf(e.condition) >= 0
            }).forEach(function(t) {
                return h = n.convertStep(h, t, r, u, e)
            });
            h.progress(function(n, t) {
                i.splitResult ? (n.done(function(t) {
                    t.forEach(function(t, i) {
                        var r = $.Deferred().resolve([t]).promise();
                        Utils.setIndex(r, i, n);
                        f(r)
                    })
                }), n.fail(function() {
                    return f(n)
                }), n.always(function() {
                    --t.jobCnt < 1 && s.resolve()
                })) : (f(n), --t.jobCnt < 1 && s.resolve())
            });
            l = {
                jobCnt: t.length
            };
            Utils.setIndex(t, o.transformId++);
            t.forEach(function(n, i) {
                return Utils.setIndex(n, i, t), c.notify(n, l)
            })
        })
    }, n.convertStep = function(t, i, r, u, f) {
        return i.useAll ? n.convertMulti(t, i, r, u, f) : n.convertSingle(t, i, r, u, f)
    }, n.groupFleByFormat = function(n) {
        var t = n.map(function(n) {
            return n.getFormatPro()
        });
        return $.when.apply(null, t).then(Utils.argsToArr).then(function(t) {
            return t.reduce(function(t, i, r) {
                return t[i] || (t[i] = []), t[i].push(n[r]), t
            }, {})
        })
    }, n.convertMulti = function(t, i, r, u, f) {
        return $.Deferred(function(e) {
            var o = [];
            t.progress(function(t, s) {
                Utils.insertByIdx(o, t);
                o.length >= s.jobCnt && $.when.apply(null, o).then(Utils.argsToArr).then(Utils.flatten).then(function(o) {
                    n.groupFleByFormat(o).done(function(n) {
                        var a, c, v;
                        s.jobCnt = Object.keys(n).length;
                        a = 0;
                        for (c in n) {
                            var l = n[c],
                                h = Utils.getTransformConverter(c, i.converters),
                                o = void 0;
                            h ? h.bypass ? o = $.Deferred().resolve(l).promise() : (v = $.extend(h.parameters, f), o = Cara.convert(l, !0, r, h.destinationFormat, u, v)) : o = l[0].getNamePro().then(function(n) {
                                return $.Deferred().reject(n).promise()
                            });
                            o.idx = [t.idx[0], a++];
                            e.notify(o, s)
                        }
                    })
                }, function(n) {
                    var t = $.Deferred().reject(n).promise();
                    e.notify(t, s)
                })
            })
        }).promise()
    }, n.convertSingle = function(t, i, r, u, f) {
        return $.Deferred(function(e) {
            t.progress(function(t, o) {
                t.done(function(s) {
                    o.jobCnt += s.length - 1;
                    s.forEach(function(s, h) {
                        var c = n.convertFlesPro([s], i, r, u, f);
                        Utils.setIndex(c, h, t);
                        e.notify(c, o)
                    })
                });
                t.fail(function() {
                    e.notify(t, o)
                })
            })
        }).promise()
    }, n.convertFlesPro = function(n, t, i, r, u) {
        return n[0].getFormatPro().then(function(f) {
            var e = Utils.getTransformConverter(f, t.converters),
                o;
            return e ? e.bypass ? $.Deferred().resolve(n).promise() : (o = $.extend(e.parameters, u), Cara.convert(n, !1, i, e.destinationFormat, r, o)) : (n.forEach(function(n) {
                return n.cancel("Unable to find matching converter in transformation step")
            }), n[0].getNamePro().then(function(n) {
                return $.Deferred().reject(n).promise()
            }))
        })
    }, n.transformId = 0, n
}(),
ResultDom = function(n) {
    function t(t) {
        var i = n.call(this) || this;
        i.bodyDom = t;
        i.elResultContainer = i.bodyDom.getBody().find(".result-container");
        i.elDownloadContainer = i.bodyDom.getBody().find(".download-container");
        i.elDownloadBtn = i.elDownloadContainer.find(".download-btn");
        i.elSaveToDropboxBtn = i.elDownloadContainer.find(".save-to-dropbox-btn");
        i.elSaveToGdriveBtn = i.elDownloadContainer.find(".save-to-gdrive-btn");
        i.elRemoveBtn = i.elDownloadContainer.find(".remove-btn");
        i.elChainBtn = i.elDownloadContainer.find(".chain-btn");
        i.elChain = i.elDownloadContainer.find(".chain");
        i.elFiles = i.elResultContainer.find(".files");
        i.elDownloadBtn.on("click", function() {
            return i.trigger("downloadBtnClick")
        });
        i.elSaveToDropboxBtn.on("click", function() {
            return i.trigger("saveToDropboxBtnClick")
        });
        i.elRemoveBtn.on("click", function() {
            return i.trigger("removeBtnClick")
        });
        i.elChainBtn.on("click", function() {
            return i.trigger("chainBtnClick")
        });
        $(window).on("scroll resize fileCntChange", function() {
            return i.getFirstVisibleFileIds().forEach(function(n) {
                return i.trigger("newVisibleFile", n)
            })
        });
        return i
    }
    return __extends(t, n), t.prototype.show = function(n) {
        this.elResultContainer.removeClass("hidden");
        this.elFiles.find(".upload-area-small").toggleClass("hidden", !n)
    }, t.prototype.toggleJobSpinner = function(n) {
        this.elFiles.find(".job-spinner").toggleClass("hidden", !n)
    }, t.prototype.removeSpinner = function(n) {
        $("#" + n).remove()
    }, t.prototype.toggleDownloadContainer = function(n) {
        this.elDownloadContainer.toggleClass("hidden", !n)
    }, t.prototype.setDownloadUrl = function(n, t) {
        var i = this;
        this.elDownloadContainer.removeClass("hidden");
        this.elDownloadBtn.attr("href", n);
        Google.loadLib().done(function() {
            gapi.savetodrive.render("gdrive-btn", {
                src: n,
                filename: t,
                sitename: "freepdfconvert.com"
            });
            i.elSaveToGdriveBtn.removeClass("disabled")
        });
        DropboxIntegration.loadLib().done(function() {
            i.bind("saveToDropboxBtnClick", function() {
                return Dropbox.save(n, name, {})
            });
            i.elSaveToDropboxBtn.removeClass("disabled")
        })
    }, t.prototype.showAd = function() {
        $(".result-container-ad").removeClass("hidden")
    }, t.prototype.addFile = function(n, t) {
        this.elFiles.removeClass("hidden");
        var i = $(this.elFiles.data("template-file"));
        i.attr("id", n);
        Utils.insertElement(this.elFiles, i, t);
        $(window).trigger("fileCntChange")
    }, t.prototype.setFileInfo = function(n, t, i, r) {
        var f = this,
            u = this.elFiles.find("#" + n);
        u.attr("href", t);
        u.attr("title", i);
        u.find(".file-name").text(i);
        u.find(".file-info").text(r);
        u.on("click", function() {
            return f.trigger("downloadThumbClick")
        });
        u.find(".placeholder .spinner").addClass("hidden");
        u.find(".placeholder").addClass("ready")
    }, t.prototype.setFileError = function(n, t, i) {
        i === void 0 && (i = null);
        var r = this.elFiles.find("#" + n);
        r.addClass("error");
        r.find(".placeholder .spinner").addClass("hidden");
        r.find(".placeholder").addClass("img-failure");
        r.attr("title", t);
        r.find(".file-name").text(t);
        r.find(".file-info").text(i)
    }, t.prototype.setFileThumbnail = function(n, t) {
        var i = this.elFiles.find("#" + n + " .file-item-main").children(),
            r = i.filter(".thumbnail"),
            u = i.filter(".download-icon");
        r.attr("src", t);
        i.addClass("hidden");
        r.removeClass("hidden");
        u.removeClass("hidden")
    }, t.prototype.setFileDefaultThumbnail = function(n, t) {
        this.elFiles.find("#" + n + " .file-item-main").children().addClass("hidden").filter(".placeholder, .download-icon").removeClass("hidden").filter(".placeholder").addClass("img-file-" + t)
    }, t.prototype.getFirstVisibleFileIds = function() {
        return this.elFiles.find(".file-item:not(.error)").filter(function(n, t) {
            return !$(t).prop("thumbnailGenerated") && Utils.elIsInViewport(t)
        }).map(function(n, t) {
            return $(t).prop("thumbnailGenerated", !0), $(t).attr("id")
        }).get()
    }, t.prototype.addChainFormat = function(n, t, i) {
        var r = $(this.elChain.data("template-converter")).attr("href", t).text(n).addClass("img-" + i);
        this.elChain.append(r)
    }, t.prototype.clearChainFormats = function() {
        this.elChain.empty()
    }, t
}(Dom),
Result = function() {
    function n() {}
    return n.show = function(n, t, i) {
        var r = this;
        n.show(!t.convMeta.editor.visible);
        n.bodyDom.trigger("fileInputSetSrcFormats", Utils.getSrcFormats(t.convMeta));
        n.bodyDom.trigger("fileInputSetMultiselect", !0);
        n.bind("removeBtnClick", function() {
            return t.deleteAll().always(function() {
                return Utils.reloadPage()
            })
        });
        n.bind("newVisibleFile", function(i, r) {
            var u = t.getTfleById(r);
            u && u.getThumbnailUrlPro().then(function(n) {
                return Utils.preloadImage(n)
            }).then(function(t) {
                return n.setFileThumbnail(r, t)
            }, function() {
                return u.getFlesPro().then(function(n) {
                    return n[0].getFormatPro()
                }).then(function(t) {
                    return n.setFileDefaultThumbnail(r, t)
                })
            })
        });
        t.getTfles().forEach(function(i, u) {
            n.addFile(i.getId(), u);
            i.getFlesPro().then(function(u) {
                $.when(u[0].getUrlPro(), u[0].getNamePro(), r.fileInfo(u[0], t.getConvMeta().fileInfo)).done(function(t, r, u) {
                    return n.setFileInfo(i.getId(), t, r, u)
                })
            }).fail(function(t) {
                return r.addFailedFile(n, t, i.getId())
            })
        });
        t.getAddingPro().progress(function(i) {
            i.state() === "pending" && (n.toggleJobSpinner(!0), i.always(function() {
                n.toggleJobSpinner(t.getJobCnt() > 0);
                t.getFlesPros().length !== 0 || t.convMeta.editor.addFiles || n.bodyDom.showError()
            }))
        });
        t.bind("fileAdded", function(i, u, f) {
            n.addFile(u.getId(), f);
            u.getFlesPro().done(function(i) {
                $.when(i[0].getUrlPro(), i[0].getNamePro(), r.fileInfo(i[0], t.getConvMeta().fileInfo)).done(function(t, i, r) {
                    return n.setFileInfo(u.getId(), t, i, r)
                })
            }).fail(function(t) {
                return r.addFailedFile(n, t, u.getId())
            });
            r.filesChanged(n, t)
        });
        t.bind("fileNotAccepted", function(t, i) {
            return r.addFailedFile(n, i)
        });
        this.filesChanged(n, t, i)
    }, n.addFailedFile = function(n, t, i) {
        i === void 0 && (i = null);
        i || (i = Math.random().toString(36).substring(2), n.addFile(i, 1));
        n.setFileError(i, t, "The file failed to convert")
    }, n.fileInfo = function(n, t) {
        var i = n.getSrcSize();
        return t && i ? n.getSizePro().then(function(n) {
            var r = i - n,
                u = Math.round(r * 100 / (i ? i : 1));
            return t.replace("{{reducePerc}}", u.toString()).replace("{{srcSize}}", Utils.formatBytes(i)).replace("{{size}}", Utils.formatBytes(n))
        }) : $.Deferred().resolve(null).promise()
    }, n.persistCtx = function(n) {
        return n.getSuccessFlesPro().then(function(n) {
            return n.map(function(n) {
                return $.when(n.getFileIdDef(), n.getNamePro(), n.getSizePro()).then(function(n, t, i) {
                    return {
                        FileId: n,
                        FileName: t,
                        FileSize: i
                    }
                })
            })
        }).then(function(t) {
            var i = $.when.apply(null, t).then(Utils.argsToArr).then(function(t) {
                return Utils.persist({
                    convMeta: n.convMeta,
                    files: t
                }, n.caraInfo.domain)
            });
            return i.done(function(n) {
                return window.history.pushState(null, null, "#" + n)
            }), i
        })
    }, n.setChainFormats = function(n, t, i) {
        t.getFormatsPro().then(function(t) {
            Utils.getMetas(n.bodyDom.getConversionInfoPath(), t, "chain").then(function(t) {
                n.clearChainFormats();
                t.forEach(function(t) {
                    return n.addChainFormat(t.name, "/" + t.id + "#" + i + ";chain", t.cssClass)
                })
            })
        })
    }, n.filesChanged = function(n, t, i) {
        var r = this;
        (i ? $.Deferred().resolve(i) : this.persistCtx(t)).done(function(i) {
            r.setChainFormats(n, t, i);
            t.getFlesPro();
            t.getFleCount().then(function(r) {
                r === 1 ? t.getFirstFle().then(function(n) {
                    return $.when(n.getUrlPro(), n.getNamePro())
                }).done(function(t, i) {
                    return n.setDownloadUrl(t, i)
                }) : n.setDownloadUrl("/z?id=" + i, "result.zip");
                n.bodyDom.isAuth() || n.showAd()
            });
            $.post(n.bodyDom.getTokenConvertedPath()).always(function() {
                return User.refresh()
            });
            DataLayerPush.conversionSuccess()
        })
    }, n
}(),
Prices = function() {
    function n() {}
    return n.show = function(n, t, i) {
        i === void 0 && (i = !1);
        $.getScript("https://cdn.paddle.com/paddle/paddle.js").done(function() {
            Paddle.Setup({
                vendor: t,
                eventCallback: function(n) {
                    DataLayerPush.orders.checkoutEvent(n.event.toString(), n.eventData.product.id)
                }
            });
            n.bind("priceClick", function(n, t, i) {
                var r = window.userData,
                    u;
                i.indexOf("?") === -1 && (i = i + "?");
                r && r.email && (i = i + ("&guest_email=" + r.email));
                u = "ProductId=" + t;
                r && r.userid && (u = u + ";UserId=" + r.userid);
                i = i + "&" + encodeURIComponent("passthrough=" + u);
                DataLayerPush.orders.orderClick(t);
                Paddle.Checkout.open({
                    override: i,
                    successCallback: function(n) {
                        var t = n.checkout.redirect_url;
                        window.location.href = t
                    }
                })
            })
        })
    }, n
}(),
PricesDom = function(n) {
    function t(t) {
        var i = n.call(this) || this;
        i.bodyDom = t;
        i.elPricesContainer = i.bodyDom.getBody().find(".prices-container");
        i.elPrice = i.elPricesContainer.find(".price");
        i.elPrice.on("click", function(n) {
            typeof Paddle != "undefined" && n.preventDefault();
            i.trigger("priceClick", $(n.currentTarget).data("product-id"), $(n.currentTarget).attr("href"))
        });
        return i
    }
    return __extends(t, n), t.prototype.getProductId = function() {
        return this.elPrice.map(function(n, t) {
            return $(t).data("product")
        }).get()
    }, t.prototype.setPrice = function(n, t) {
        this.elPrice.filter("[data-product='" + n + "']").find(".ammount").text(t)
    }, t
}(Dom),
ConverterSelectorDom = function(n) {
    function t(t) {
        var i = n.call(this) || this;
        i.bodyDom = t;
        i.elDstFormatContainer = i.bodyDom.getBody().find(".converter-selector-container");
        i.elFiles = i.elDstFormatContainer.find(".files");
        i.elConverters = i.elDstFormatContainer.find(".converters");
        i.elDropDownMenu = i.elDstFormatContainer.find(".menu-dropdown");
        i.elDstFormatContainer.on("click", ".converter-btn", function(n) {
            return i.trigger("formatSelected", $(n.currentTarget).data("id"))
        });
        return i
    }
    return __extends(t, n), t.prototype.show = function() {
        this.elDstFormatContainer.removeClass("hidden")
    }, t.prototype.hide = function() {
        this.elDstFormatContainer.addClass("hidden")
    }, t.prototype.addFile = function(n, t) {
        var i = $(this.elFiles.data("template-file"));
        i.attr("id", n);
        i.find(".file-name").text(t);
        this.elFiles.append(i)
    }, t.prototype.setFileThumbnail = function(n, t) {
        var i = this.elFiles.find("#" + n + " .file-item-main").children(),
            r = i.filter(".thumbnail");
        r.attr("src", t);
        i.addClass("hidden");
        r.removeClass("hidden")
    }, t.prototype.toggleFileSpinner = function(n, t) {
        var i = this.elFiles.find("#" + n + " .file-item-main .placeholder");
        i.toggleClass("img-file", !t);
        i.children(".spinner").toggleClass("hidden", !t)
    }, t.prototype.empty = function() {
        this.elConverters.empty()
    }, t.prototype.addFormat = function(n, t, i) {
        var r;
        this.elConverters.children().length < 4 ? (r = this.elConverters.data("template-btn").replace(/{{id}}/g, n).replace(/{{name}}/g, t).replace(/{{class}}/g, i ? i : "file"), this.elConverters.append(r)) : (r = this.elDropDownMenu.data("template-btn").replace(/{{id}}/g, n).replace(/{{name}}/g, t).replace(/{{class}}/g, i ? i : "file"), this.elDropDownMenu.append(r))
    }, t
}(Dom),
ConverterSelector = function() {
    function n() {}
    return n.getConvMeta = function(n, t, i) {
        var r = this;
        return $.Deferred(function(u) {
            t.getFormatsPro().then(function(f) {
                i && Utils.arrContains(Utils.getSrcFormats(i), f) ? u.resolve(i).promise() : Utils.getMetas(n.bodyDom.getConversionInfoPath(), f).then(function(i) {
                    i.length > 1 && (i = i.filter(function(n) {
                        return n.id !== "index"
                    }));
                    i.length === 0 ? u.reject(f[0]).promise() : i.length === 1 ? u.resolve(i[0]).promise() : r.show(n, t, i).then(function(n) {
                        return u.resolve(n)
                    })
                })
            }).promise()
        })
    }, n.show = function(n, t, i) {
        return $.Deferred(function(r) {
            r.always(function() {
                return n.hide()
            });
            n.bodyDom.trigger("fileInputSetEnabled", !1);
            t.getTfles().forEach(function(t) {
                t.getFlesPro().then(function(t) {
                    return t.forEach(function(t, i) {
                        t.getNamePro().then(function(t) {
                            return n.addFile(i.toString(), t)
                        });
                        t.getThumbnailUrlPro().then(function(n) {
                            return Utils.preloadImage(n)
                        }).then(function(t) {
                            return n.setFileThumbnail(i.toString(), t)
                        }, function() {
                            return n.toggleFileSpinner(i.toString(), !1)
                        })
                    })
                })
            });
            var u = i.sort(function(n, t) {
                var i = n.groupSortIndex - t.groupSortIndex;
                return i === 0 && (i = n.sortIndex - t.sortIndex), i
            });
            u.forEach(function(t) {
                return n.addFormat(t.id, t.name, t.cssClass)
            });
            n.show();
            n.bind("formatSelected", function(n, t) {
                var u = i.filter(function(n) {
                    return n.id === t
                })[0];
                r.resolve(u)
            })
        }).promise()
    }, n
}(),
ManagerDom = function(n) {
    function t(t) {
        var i = n.call(this) || this;
        i.bodyDom = t;
        i.elManagerContainer = i.bodyDom.getBody().find(".manager-container");
        i.elFiles = i.elManagerContainer.find(".files");
        i.elActionsContainer = i.elManagerContainer.find(".actions-container");
        i.bodyDom.getBody().on("keydown", function(n) {
            return n.ctrlKey && n.keyCode === 65 ? (i.trigger("fileSelectAll"), !1) : !0
        });
        i.elFiles.on("click", ".file-item", function(n) {
            return i.trigger("fileClick", $(n.currentTarget).attr("id"), n.shiftKey), !1
        });
        i.elFiles.on("click", ".rotate", function(n) {
            return i.trigger("rotateFileClick", $(n.currentTarget).closest(".file-item").attr("id")), !1
        });
        i.elFiles.on("click", ".remove", function(n) {
            return i.trigger("removeFileClick", $(n.currentTarget).closest(".file-item").attr("id")), !1
        });
        $(window).on("scroll resize fileCntChange", function() {
            return i.getFirstVisibleFileIds().forEach(function(n) {
                return i.trigger("newVisibleFile", n)
            })
        });
        return Sortable.create(i.elFiles[0], {
            draggable: ".draggable",
            onMove: function(n) {
                return n.related ? !n.related.classList.contains("add-file-container") : !0
            },
            onUpdate: function() {
                var n = i.elFiles.children(".file-item").map(function(n, t) {
                    return $(t).attr("id")
                }).toArray();
                return i.trigger("changedSorting", n)
            }
        }), i
    }
    return __extends(t, n), t.prototype.setActions = function(n) {
        var t = this,
            i = this.elActionsContainer.data("convert-btn");
        n = n ? n.replace("{{convert-btn}}", i) : i;
        this.elActionsContainer.html(n);
        this.elConvertBtn = this.elActionsContainer.find(".convert-btn");
        this.elConvertBtn.on("click", function() {
            return t.trigger("convertClick", t.getParamVals())
        });
        this.elActionsContainer.find(".rotate-all-btn").on("click", function() {
            return t.trigger("rotateAllClick")
        });
        this.elActionsContainer.find(".remove-range-btn").on("click", function() {
            var n = t.elActionsContainer.find(".remove-range");
            t.trigger("removeRangeClick", n.val());
            n.focus().val("")
        })
    }, t.prototype.getParamVals = function() {
        var n = {},
            t = this.elActionsContainer.find("input.parameter-input[type='text'], input.parameter-input[type='password'], input.parameter-input[type='radio']:checked");
        return t.each(function(t, i) {
            return $(i).attr("name").split(" ").forEach(function(t) {
                return n[t] = $(i).val()
            })
        }), n
    }, t.prototype.show = function(n, t) {
        this.elManagerContainer.removeClass("hidden");
        this.setActions(t)
    }, t.prototype.isVisible = function() {
        return !this.elManagerContainer.hasClass("hidden")
    }, t.prototype.hide = function() {
        this.elManagerContainer.addClass("hidden")
    }, t.prototype.empty = function() {
        this.elManagerContainer.empty()
    }, t.prototype.addFile = function(n, t, i) {
        var r = $(this.elFiles.data("template-file").replace(/{{name}}/g, i)),
            u;
        r.attr("id", n);
        u = this.elFiles.find(".file-item");
        u.length > t ? r.insertBefore($(u[t])) : this.elFiles.append(r);
        $(window).trigger("fileCntChange")
    }, t.prototype.showFileControls = function(n) {
        this.getFileControlsEl(n).removeClass("hidden")
    }, t.prototype.setFileThumbnail = function(n, t) {
        this.getFileThumbnailEl(n).attr("src", t).removeClass("hidden");
        this.getFilePlaceholderEl(n).addClass("hidden")
    }, t.prototype.setSpinner = function(n) {
        this.findById(n).find(".file-item-main").children().addClass("hidden");
        this.findById(n).find(".spinner").removeClass("hidden")
    }, t.prototype.setFileThumbnailPlaceholder = function(n, t) {
        this.getFilePlaceholderEl(n).removeClass("hidden").addClass("img-file-" + t)
    }, t.prototype.findById = function(n) {
        return this.elFiles.children("#" + n)
    }, t.prototype.getFileThumbnailEl = function(n) {
        return this.findById(n).find(".thumbnail")
    }, t.prototype.getFilePlaceholderEl = function(n) {
        return this.findById(n).find(".placeholder")
    }, t.prototype.getFileControlsEl = function(n) {
        return this.findById(n).find(".controls")
    }, t.prototype.rotateFile = function(n, t) {
        var i = this.findById(n).find(".rotatable");
        t === 90 || t === 270 ? i.height() > i.width() ? i.css("height", i.parent().width() + "px").css("width", "auto") : i.css("min-width", i.parent().height() + "px") : i.height() > i.width() ? i.css("height", i.parent().height() + "px").css("width", "auto") : i.css("max-width", i.parent().width() + "px").css("min-width", "0");
        i.css("transform", "rotate(" + t + "deg)")
    }, t.prototype.removeFile = function(n) {
        var t = this.findById(n).css({
            transition: "all 0.5s ease-in-out",
            transform: "scale(0) rotate(1turn)"
        });
        setTimeout(function() {
            return t.remove()
        }, 500);
        $(window).trigger("fileCntChange")
    }, t.prototype.addSpinner = function(n) {
        var t = $(this.elFiles.data("template-spinner").replace("{{id}}", n));
        this.elFiles.append(t);
        t.get(0).scrollIntoView()
    }, t.prototype.replaceFileWithSpinner = function(n) {
        var t = $(this.elFiles.data("template-spinner").replace("{{id}}", n));
        this.findById(n).replaceWith(t)
    }, t.prototype.removeSpinner = function(n) {
        $("#" + n).remove()
    }, t.prototype.setButtonLable = function(n) {
        var t = this.elConvertBtn.text().replace(/{{lable}}/g, n);
        this.elConvertBtn.text(t)
    }, t.prototype.enableFileActions = function(n) {
        n === void 0 && (n = !0);
        this.elActionsContainer.toggleClass("disabled", !n)
    }, t.prototype.getFirstVisibleFileIds = function() {
        return this.elFiles.find(".file-item").filter(function(n, t) {
            return !$(t).prop("thumbnailGenerated") && Utils.elIsInViewport(t)
        }).map(function(n, t) {
            return $(t).prop("thumbnailGenerated", !0), $(t).attr("id")
        }).get()
    }, t.prototype.setFileSelected = function(n, t) {
        this.findById(n).toggleClass("selected", t)
    }, t
}(Dom),
Manager = function() {
    function n() {}
    return n.show = function(n, t) {
        var i = this,
            r;
        return Google.loadModule("auth"), GooglePicker.multiselect = !0, DropboxIntegration.loadLib(), DropboxIntegration.multiselect = !0, n.bodyDom.trigger("fileInputSetSrcFormats", Utils.getSrcFormats(t.convMeta)), n.bodyDom.trigger("fileInputSetMultiselect", !0), n.show(Utils.getSrcFormats(t.convMeta), t.convMeta.parameter), r = $.Deferred(), r.always(function() {
            t.cancelThumbnails();
            n.hide()
        }), t.getTfles().forEach(function(r, u) {
            i.addFile(n, t, r, u)
        }), t.getAddingPro().progress(function(i) {
            if (i.state() === "pending") {
                var r = Math.random().toString(36).substring(2);
                n.addSpinner(r);
                i.always(function() {
                    n.removeSpinner(r);
                    t.getFlesPros().length !== 0 || t.convMeta.editor.addFiles || n.bodyDom.showError()
                })
            }
        }), n.bind("fileClick", function(r, u, f) {
            var e = t.getTfleById(u),
                o;
            e.selected = !e.selected;
            f && t.lastClickSelectedTFleId && (o = t.getTfleById(t.lastClickSelectedTFleId), o && t.getTfles().slice(t.getTfles().indexOf(o), t.getTfles().indexOf(e)).forEach(function(n) {
                return n.selected = !0
            }));
            i.updateFilesDom(n, t);
            t.lastClickSelectedTFleId = e.selected ? u : null
        }), n.bind("fileSelectAll", function() {
            var r = t.getTfles().every(function(n) {
                return n.selected
            });
            t.getTfles().forEach(function(n) {
                n.selected = !r
            });
            i.updateFilesDom(n, t)
        }), n.bind("fileSelectionRangeChanged", function(i, r) {
            var u = Utils.parseRanges(r);
            t.getTfles().forEach(function(t, i) {
                t.selected = u.indexOf(i + 1) >= 0;
                n.setFileSelected(t.getId(), t.selected)
            })
        }), n.bind("rotateFileClick", function(r, u) {
            return i.rotateFile(n, t, u)
        }), n.bind("removeFileClick", function(r, u) {
            return i.removeFile(n, t, u)
        }), n.bind("changedSorting", function(n, i) {
            return t.reorder(i)
        }), t.bind("fileAdded", function(r, u, f) {
            return i.addFile(n, t, u, f)
        }), n.bind("newVisibleFile", function(r, u) {
            return i.generateThumbnail(n, t.getTfleById(u))
        }), n.setButtonLable(t.convMeta.buttonLabel), n.bind("rotateAllClick", function() {
            return i.rotateAll(n, t)
        }), n.bind("removeRangeClick", function(r, u) {
            return i.removeRange(n, t, u)
        }), n.bind("convertClick", function(i, u) {
            window.managerCustomAction && window.managerCustomAction(n, t);
            t.userParams = u;
            r.resolve(t)
        }), window.managerCustomActionInit && window.managerCustomActionInit(n, t), r.promise()
    }, n.updateFilesDom = function(n, t) {
        t.getTfles().forEach(function(t) {
            return n.setFileSelected(t.getId(), t.selected)
        });
        var i = t.getTfles().map(function(n, t) {
            return n.selected ? t + 1 : null
        }).filter(function(n) {
            return n
        });
        n.trigger("fileSelectionChanged", Utils.buildRanges(i))
    }, n.addFile = function(n, t, i, r) {
        i.getFlesPro().done(function(t) {
            return t[0].getNamePro().done(function(t) {
                n.addFile(i.getId(), r, t);
                n.showFileControls(i.getId());
                n.enableFileActions()
            })
        });
        i.getFlesPro().fail(function(r) {
            t.removeFile(i);
            n.bodyDom.showToast("Unable to add " + r + " file")
        })
    }, n.generateThumbnail = function(n, t) {
        n.isVisible() && t.getThumbnailUrlPro().then(function(n) {
            return Utils.preloadImage(n)
        }).then(function(i) {
            return n.setFileThumbnail(t.getId(), i)
        }, function() {
            return t.getFlesPro().then(function(n) {
                return n[0].getFormatPro()
            }).then(function(i) {
                return n.setFileThumbnailPlaceholder(t.getId(), i)
            })
        })
    }, n.rotateAll = function(n, t) {
        var i = this;
        t.getTfles().forEach(function(r) {
            return i.rotateFile(n, t, r.getId())
        })
    }, n.removeRange = function(n, t, i) {
        var r = this;
        Utils.parseRanges(i).filter(function(n) {
            return t.getTfles().length >= n
        }).reverse().forEach(function(i) {
            return r.removeFile(n, t, t.getTfles()[i - 1].getId())
        })
    }, n.rotateFile = function(n, t, i) {
        var r = t.getTfleById(i);
        r.rotate();
        n.rotateFile(r.getId(), r.getRotationAngle())
    }, n.removeFile = function(n, t, i) {
        var r = t.getTfleById(i);
        n.removeFile(i);
        t.removeFile(r);
        t.getTfles().length === 0 && (n.enableFileActions(!1), t.convMeta.editor.addFiles || Utils.reloadPage())
    }, n
}(),
Converter = function() {
    function n() {}
    return n.init = function(n, t) {
        var r = n.getCaraInfo(),
            i, f;
        r.tokenProFn = Token.createFn(t.token);
        var e = this.getDefConvMeta(n),
            h = new StartDom(n),
            c = new FileInputDom(n);
        FileInput.show(c);
        i = new Context(r, null, null);
        ContextEvents.bind(n, i, n.isAuth() || e && e.editor.addFiles);
        var o = window.location.hash.split("#")[1],
            u = o ? o.split(";")[0] : null,
            s = o ? o.split(";")[1] : null;
        s = s ? s : "result";
        u ? (h.hide(), f = Utils.retrieve(u, r.domain).then(function(n) {
            return i.addStateFiles(n.files), i.convMeta = n.convMeta, i.rules = i.convMeta.postRule, i
        })) : f = Start.show(h, i, e);
        u && s !== "chain" || (f = f.then(function(t) {
            history.pushState(null, "Files selected");
            var i = ConverterSelector.getConvMeta(new ConverterSelectorDom(n), t, e);
            return i.fail(function() {
                return t.cancel("")
            }), $.when(t, i)
        }).then(function(t, i) {
            ErrorLogger.debugLogAdd("Converter: " + i.name);
            n.setMainHeader(i.heading1, i.heading2);
            var u = new Context(r, i, i.prepareRule);
            return u.prepAndAddFles(t.getFlesPros()), t.cancel("Removing events", !1), u
        }).then(function(t) {
            return t.convMeta.editor.visible ? (ErrorLogger.debugLogAdd("Showing file manager"), ContextEvents.bind(n, t, !0), Manager.show(new ManagerDom(n), t)) : t
        }).then(function(t) {
            var i = new Context(r, t.convMeta, t.convMeta.postRule);
            return i.userParams = t.userParams, i.prepAndAddFles(t.getFlesPros()), t.cancel("Removing events", !1), ContextEvents.bind(n, i, n.isAuth()), i
        }));
        f.then(function(i) {
            var r = new ResultDom(n);
            Result.show(r, i, u);
            ErrorLogger.debugLogAdd("Showing results");
            t.stamp && r.bind("downloadBtnClick downloadThumbClick", function() {})
        }).fail(function(t) {
            u ? window.location.replace("#") : n.showError(t)
        })
    }, n.getDefConvMeta = function(n) {
        var t = n.getDefaultConverterMeta();
        return t ? JSON.parse(t) : null
    }, n
}(),
Orders = function() {
    function n() {}
    return n.orderClick = function(n) {
        DataLayerPush.send({
            event: "SendEvent",
            category: "Order",
            action: "Order click",
            label: n
        })
    }, n.signUpClick = function() {
        DataLayerPush.send({
            event: "SendEvent",
            category: "Order",
            action: "SignUp click"
        })
    }, n.checkoutEvent = function(n, t) {
        DataLayerPush.send({
            event: "SendEvent",
            category: "Checkout",
            action: n,
            label: t
        })
    }, n.category = "Orders", n
}(),
DataLayerPush = function() {
    function n() {}
    return n.send = function() {
        window.dataLayer && dataLayer.push.apply(null, arguments)
    }, n.fileSelectLocal = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Select.Local",
            label: t
        })
    }, n.fileSelectRemote = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Select.Remote",
            label: t
        })
    }, n.fileSelectFail = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Select.Fail",
            label: t
        })
    }, n.fileUploadStart = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Upload.Start",
            label: t
        })
    }, n.fileUploadSuccess = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Upload.Success",
            label: t
        })
    }, n.fileUploadFail = function(t) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Upload.Fail",
            label: t
        })
    }, n.conversionStart = function(t, i) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Convert.Start",
            label: t + " -> " + i
        })
    }, n.conversionSuccess = function() {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Convert.Success"
        })
    }, n.conversionFail = function(t, i) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Convert.Fail",
            label: t + " -> " + i
        })
    }, n.conversionFixPdf = function(t, i) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Convert.Fixing.PDF",
            label: t + " -> " + i
        })
    }, n.conversionFixOo = function(t, i) {
        n.send({
            event: "SendEvent",
            category: "Conversion",
            action: "Conversion.Convert.Fixing.OO",
            label: t + " -> " + i
        })
    }, n.orders = Orders, n
}(),
ConvertCounter = new function() {
    var n = 9e7,
        t = 2e6 / 30;
    this.init = function() {
        this.originDate = new Date(2013, 8, 30, 0, 0, 0, 0);
        this.calculateCount();
        this.loop()
    };
    this.loop = function() {
        var n = Math.round(Math.random() * 3500) + 500;
        this.interval = setTimeout($.proxy(function() {
            this.calculateCount();
            this.loop()
        }, this), n)
    };
    this.calculateCount = function() {
        this.now = new Date;
        this.elapsedDays = (this.now.getTime() - this.originDate.getTime()) / 864e5;
        this.growthRate = Math.pow(1.1, this.elapsedDays / 30);
        this.count = n + Math.round(this.elapsedDays * t * this.growthRate);
        this.set(this.count)
    };
    this.set = function(n) {
        var t = $("#convert-counter"),
            i = t.data("template");
        t.length && i && (n = this.insertNumberGroupSeparator(n), t.html(i.replace("{0}", '<span class="count">' + n + "<\/span>")))
    };
    this.stop = function() {
        clearInterval(this.interval)
    };
    this.insertNumberGroupSeparator = function(n) {
        var t;
        n = n.toString().split("").reverse().join("");
        for (var r = [], i = 0, u = n.length; i < u;) r.push(n.slice(i, i += 3));
        return t = $("body").data("number-group-separator"), t === "&#160;" && (t = " "), n = r.join(t), n.toString().split("").reverse().join("")
    }
},
Navigation = function() {
    function n() {}
    return n.init = function() {
        window.onpopstate = function(n) {
            if (n.state && n.state.targetId) {
                var t = $("#" + n.state.targetId);
                if (t.length > 0 && t.data("history-back")) {
                    t.data("history-back")();
                    return
                }
            }
            Utils.reloadPage()
        }
    }, n
}(),
Init = function() {
    function n() {}
    return n.domReady = function() {
        var n = new BodyDom,
            t;
        if (User.init(new UserDom(n)), n.isAction("index") || n.isAction("converter")) {
            User.dataPro().done(function(t) {
                return Converter.init(n, t)
            });
            t = new DragAndDropDom(n);
            GooglePicker.registerEvents(n, n.getGoogleDeveloperKey(), n.getGoogleClientId(), n.getLocale());
            DropboxIntegration.registerEvents(n);
            ConvertCounter.init();
            $(".fullscr-dialog").find(".fullscr-dialog-close").on("click", function(n) {
                $("html").css("overflow", "auto");
                $(n.currentTarget).parents(".fullscr-dialog").addClass("hidden")
            })
        } else n.isAction("membership") && Prices.show(new PricesDom(n), n.getPaddleVendorId())
    }, n
}(),
App = function() {
    function n() {}
    return n.run = function() {
        typeof jQuery == "undefined" ? document.getElementById("jquery").addEventListener("load", this.jQueryReady) : this.jQueryReady()
    }, n.jQueryReady = function() {
        $.ajaxSetup({
            cache: !0
        });
        ErrorLogger.init();
        Navigation.init();
        $(document).ready(function() {
            return Init.domReady()
        })
    }, n
}();
App.run();